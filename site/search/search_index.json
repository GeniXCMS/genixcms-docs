{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#genixcms-documentation","title":"GeniXCMS Documentation","text":"<p>This is a Documentation page of GeniXCMS. We will explain more details about how to use and make a good applications with GeniXCMS.</p>"},{"location":"#development","title":"Development","text":"<p>Currently, we are still in a development progress. Including this documentation.</p> <p>Join us and contributing with us to make a great app.</p>"},{"location":"privacy-policy/","title":"Privacy Policy","text":"<p>This privacy policy has been compiled to better serve those who are concerned with how their 'Personally Identifiable Information' (PII) is being used online. PII, as described in US privacy law and information security, is information that can be used on its own or with other information to identify, contact, or locate a single person, or to identify an individual in context. Please read our privacy policy carefully to get a clear understanding of how we collect, use, protect or otherwise handle your Personally Identifiable Information in accordance with our website.</p> <p>What personal information do we collect from the people that visit our blog, website or app? When ordering or registering on our site, as appropriate, you may be asked to enter your name, email address, phone number or other details to help you with your experience.</p>"},{"location":"privacy-policy/#when-do-we-collect-information","title":"When do we collect information?","text":"<p>We collect information from you when you register on our site or enter information on our site.</p>"},{"location":"privacy-policy/#how-do-we-use-your-information","title":"How do we use your information?","text":"<p>We may use the information we collect from you when you register, make a purchase, sign up for our newsletter, respond to a survey or marketing communication, surf the website, or use certain other site features in the following ways:       \u2022 To personalize your experience and to allow us to deliver the type of content and product offerings in which you are most interested.</p>"},{"location":"privacy-policy/#how-do-we-protect-your-information","title":"How do we protect your information?","text":"<ul> <li>We do not use vulnerability scanning and/or scanning to PCI standards.</li> <li>We only provide articles and information. We never ask for credit card numbers.</li> <li>We use regular Malware Scanning.</li> <li>Your personal information is contained behind secured networks and is only accessible by a limited number of persons who have special access rights to such systems, and are required to keep the information confidential. In addition, all sensitive/credit information you supply is encrypted via Secure Socket Layer (SSL) technology.</li> <li>We implement a variety of security measures when a user enters, submits, or accesses their information to maintain the safety of your personal information. All transactions are processed through a gateway provider and are not stored or processed on our servers.</li> </ul>"},{"location":"privacy-policy/#do-we-use-cookies","title":"Do we use 'cookies'?","text":"<p>Yes. Cookies are small files that a site or its service provider transfers to your computer's hard drive through your Web browser (if you allow) that enables the site's or service provider's systems to recognize your browser and capture and remember certain information. For instance, we use cookies to help us remember and process the items in your shopping cart. They are also used to help us understand your preferences based on previous or current site activity, which enables us to provide you with improved services. We also use cookies to help us compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future.</p> <p>We use cookies to:</p> <ul> <li>Help remember and process the items in the shopping cart.</li> <li>Understand and save user's preferences for future visits.</li> <li>Keep track of advertisements.</li> <li>Compile aggregate data about site traffic and site interactions in order to offer better site experiences and tools in the future. We may also use trusted third-party services that track this information on our behalf.</li> </ul> <p>You can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies. You do this through your browser settings. Since browser is a little different, look at your browser's Help Menu to learn the correct way to modify your cookies.</p> <p>If you turn cookies off, some features will be disabled. It won't affect the user's experience that make your site experience more efficient and may not function properly.</p> <p>However, you will still be able to place orders .</p>"},{"location":"privacy-policy/#third-party-disclosure","title":"Third-party disclosure","text":"<p>We do not sell, trade, or otherwise transfer to outside parties your Personally Identifiable Information.</p>"},{"location":"privacy-policy/#third-party-links","title":"Third-party links","text":"<p>Occasionally, at our discretion, we may include or offer third-party products or services on our website. These third-party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.</p>"},{"location":"privacy-policy/#google","title":"Google","text":"<p>Google's advertising requirements can be summed up by Google's Advertising Principles. They are put in place to provide a positive experience for users. https://support.google.com/adwordspolicy/answer/1316548?hl=en</p>"},{"location":"privacy-policy/#we-use-google-adsense-advertising-on-our-website","title":"We use Google AdSense Advertising on our website.","text":"<p>Google, as a third-party vendor, uses cookies to serve ads on our site. Google's use of the DART cookie enables it to serve ads to our users based on previous visits to our site and other sites on the Internet. Users may opt-out of the use of the DART cookie by visiting the Google Ad and Content Network privacy policy.</p> <p>We have implemented the following:</p> <ul> <li>Remarketing with Google AdSense</li> <li>Demographics and Interests Reporting</li> <li>DoubleClick Platform Integration</li> </ul> <p>We, along with third-party vendors such as Google use first-party cookies (such as the Google Analytics cookies) and third-party cookies (such as the DoubleClick cookie) or other third-party identifiers together to compile data regarding user interactions with ad impressions and other ad service functions as they relate to our website.</p>"},{"location":"privacy-policy/#opting-out","title":"Opting out:","text":"<p>Users can set preferences for how Google advertises to you using the Google Ad Settings page. Alternatively, you can opt out by visiting the Network Advertising Initiative Opt Out page or by using the Google Analytics Opt Out Browser add on.</p>"},{"location":"privacy-policy/#california-online-privacy-protection-act","title":"California Online Privacy Protection Act","text":"<p>CalOPPA is the first state law in the nation to require commercial websites and online services to post a privacy policy. The law's reach stretches well beyond California to require any person or company in the United States (and conceivably the world) that operates websites collecting Personally Identifiable Information from California consumers to post a conspicuous privacy policy on its website stating exactly the information being collected and those individuals or companies with whom it is being shared. - See more at: http://consumercal.org/california-online-privacy-protection-act-caloppa/#sthash.0FdRbT51.dpuf</p>"},{"location":"privacy-policy/#according-to-caloppa-we-agree-to-the-following","title":"According to CalOPPA, we agree to the following:","text":"<p>Users can visit our site anonymously. Once this privacy policy is created, we will add a link to it on our home page or as a minimum, on the first significant page after entering our website. Our Privacy Policy link includes the word 'Privacy' and can be easily be found on the page specified above.</p> <p>You will be notified of any Privacy Policy changes:</p> <ul> <li>On our Privacy Policy Page</li> </ul> <p>Can change your personal information:</p> <ul> <li>By logging in to your account</li> </ul>"},{"location":"privacy-policy/#how-does-our-site-handle-do-not-track-signals","title":"How does our site handle Do Not Track signals?","text":"<p>We honor Do Not Track signals and Do Not Track, plant cookies, or use advertising when a Do Not Track (DNT) browser mechanism is in place.</p>"},{"location":"privacy-policy/#does-our-site-allow-third-party-behavioral-tracking","title":"Does our site allow third-party behavioral tracking?","text":"<p>It's also important to note that we allow third-party behavioral tracking</p>"},{"location":"privacy-policy/#coppa-children-online-privacy-protection-act","title":"COPPA (Children Online Privacy Protection Act)","text":"<p>When it comes to the collection of personal information from children under the age of 13 years old, the Children's Online Privacy Protection Act (COPPA) puts parents in control. The Federal Trade Commission, United States' consumer protection agency, enforces the COPPA Rule, which spells out what operators of websites and online services must do to protect children's privacy and safety online.</p>"},{"location":"privacy-policy/#we-do-not-specifically-market-to-children-under-the-age-of-13-years-old","title":"We do not specifically market to children under the age of 13 years old.","text":"<p>Fair Information Practices The Fair Information Practices Principles form the backbone of privacy law in the United States and the concepts they include have played a significant role in the development of data protection laws around the globe. Understanding the Fair Information Practice Principles and how they should be implemented is critical to comply with the various privacy laws that protect personal information.</p> <p>In order to be in line with Fair Information Practices we will take the following responsive action, should a data breach occur: We will notify you via email</p> <ul> <li>Within 7 business days</li> </ul> <p>We will notify the users via in-site notification</p> <ul> <li>Within 1 business day</li> </ul> <p>We also agree to the Individual Redress Principle which requires that individuals have the right to legally pursue enforceable rights against data collectors and processors who fail to adhere to the law. This principle requires not only that individuals have enforceable rights against data users, but also that individuals have recourse to courts or government agencies to investigate and/or prosecute non-compliance by data processors.</p>"},{"location":"privacy-policy/#can-spam-act","title":"CAN SPAM Act","text":"<p>The CAN-SPAM Act is a law that sets the rules for commercial email, establishes requirements for commercial messages, gives recipients the right to have emails stopped from being sent to them, and spells out tough penalties for violations.</p>"},{"location":"privacy-policy/#we-collect-your-email-address-in-order-to","title":"We collect your email address in order to:","text":"<ul> <li>Send information, respond to inquiries, and/or other requests or questions</li> <li>Market to our mailing list or continue to send emails to our clients after the original transaction has occurred.</li> </ul>"},{"location":"privacy-policy/#to-be-in-accordance-with-canspam-we-agree-to-the-following","title":"To be in accordance with CANSPAM, we agree to the following:","text":"<ul> <li>Not use false or misleading subjects or email addresses.</li> <li>Identify the message as an advertisement in some reasonable way.</li> <li>Include the physical address of our business or site headquarters.</li> <li>Monitor third-party email marketing services for compliance, if one is used.</li> <li>Honor opt-out/unsubscribe requests quickly.</li> <li>Allow users to unsubscribe by using the link at the bottom of each email.</li> </ul> <p>If at any time you would like to unsubscribe from receiving future emails, follow the instructions at the bottom of each email. and we will promptly remove you from ALL correspondence.</p>"},{"location":"privacy-policy/#contacting-us","title":"Contacting Us","text":"<p>If there are any questions regarding this privacy policy, you may contact us using the information below.</p> <p><pre><code>GeniXCMS\n- genixcms.my.id\n- genixcms@gmail.com\n</code></pre> Last Edited on 2024-01-16</p>"},{"location":"about/about/","title":"About GeniXCMS","text":"<p>GeniXCMS is a PHP Based Content Management System and Framework (CMSF). It's a simple and lightweight of CMSF. Very suitable for Intermediate PHP developer to Advanced Developer. Even so, GeniXCMS can be used as ordinary website like blog, portals, company profile etc. It's built with a very user friendly themes to modify. </p>"},{"location":"about/about/#why-genixcms","title":"Why GeniXCMS","text":"<p>This CMSF is a starter point to build your own online applications. With already build User manager, Content manager (Post, Pages), Menu manager, etc made you easy to add your own code and build your own custom web applications. </p> <p>Even when You are not a programmer, you can build your own website using it. Very easy to manage. </p>"},{"location":"about/about/#credits","title":"Credits","text":"<p>GeniXCMS is using some of FOSS (free and opensource software) like :</p> <ul> <li>Twitter Bootstrap, </li> <li>Summernote Text Editor, </li> <li>JQuery, </li> <li>PHP, </li> <li>MySQL, </li> <li>AdminLTE,</li> <li>Bootstrap Validator,</li> <li>etc.</li> </ul>"},{"location":"about/about/#requirements","title":"Requirements","text":"<ul> <li>PHP &gt;=8</li> <li>MySQL &gt;=4</li> </ul>"},{"location":"about/about/#showcase","title":"Showcase","text":"<p>Showcase URL : https://www.softaculous.com/demos/GeniXCMS</p>"},{"location":"about/about/#license","title":"License","text":"<p>GeniXCMS License : MIT License</p>"},{"location":"about/about/#website","title":"Website","text":"<p>Link : https://github.com/GeniXCMS/GeniXCMS</p>"},{"location":"about/about/#developer","title":"Developer","text":"<p>Developed by : GeniXCMS - https://genixcms.my.id/</p>"},{"location":"about/credits/","title":"Credits","text":"<p>GeniXCMS was built using some Opensource and Free Libraries or codes and helped by many contributors. We had a big help from them. The communities are our mentor. Below are the list of Free and Opensource applications, libraries and codes that helped us to build GeniXCMS.</p>"},{"location":"about/credits/#frontend","title":"Frontend","text":"<ul> <li>Bootstrap CSS Framework</li> <li>Fontawesome Icon</li> <li>Summernote Text Editor<ul> <li>Summernote Floats BS</li> <li>Summernote Image Attribute</li> </ul> </li> <li>AdminLTE Admin Dashboard</li> <li>JQuery &amp; JQuery UI</li> <li>HighlightJS</li> <li>Flag Icon</li> <li>Bootstrap Validator</li> <li>jQuery Tags Input</li> <li>Bootstrap DateTime Picker</li> </ul>"},{"location":"about/credits/#backend","title":"Backend","text":"<ul> <li>Linux Server</li> <li>PHP</li> <li>MySQL</li> <li>Nginx</li> <li>ImageMagick</li> <li>PNGQuant</li> <li>Composer<ul> <li>Google Recaptcha</li> <li>GuzzleHttp</li> <li>PHP-IXR</li> <li>OAuth Client </li> <li>Omnipay</li> <li>PHPMailer</li> <li>elFinder</li> <li>Symfony</li> </ul> </li> </ul>"},{"location":"about/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright \u00a9 2014-2024 Puguh Wijayanto (metalgenix.id)</p> <p>Copyright \u00a9 2024 GeniXCMS (genixcms.my.id)</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/categories.class/","title":"Categories Class","text":"<pre><code># filename: Categories.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p> <p>This class is to manage the Categories. This category structure is very simple. </p> <p>An improvement probably added in the future. Below are the explanation each method at the Categories Class.</p>"},{"location":"api/categories.class/#dropdown-method","title":"Dropdown Method","text":"<p>Usage : <code>echo Categories::dropdown(array $vars);</code></p> <p>Return: <code>string</code></p> <p>This method to create an automatic dropdown options from available categories at the database. It means we can create dropdown so easy, just fill in the parameters and a select input created automatically.</p> <p>Example:</p> <pre><code>$vars = array(\n             'name'      =&gt;  'catname',\n             'parent'    =&gt;  'parent',\n             'order_by'  =&gt;  '',\n             'sort'      =&gt;  'ASC',\n           )\necho Categories::dropdown($vars);\n</code></pre> <p>That methods calls will create output like this.</p> <pre><code>&lt;select name=\"catname\" class=\"form-control\"&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option value=\"1\"&gt;Category Name&lt;/option&gt;\n    ...\n&lt;/select&gt;\n</code></pre> <p>Explanation:</p> <ul> <li>name, this is the name  of the select input.</li> <li>parent, this is the parent of the category you want to show. No parent or empty means all categories will shows up. </li> <li>order_by, this is how you want the category ordered by. Available columns are : <code>id</code>, <code>name</code>, <code>slug</code>, <code>parent</code>, <code>desc</code> default is <code>id</code></li> <li>sort, this is the options how your categories sorted, Ascending <code>ASC</code>, or Descending <code>DESC</code>. Default is <code>ASC</code></li> </ul> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/categories.class/#lists-method","title":"Lists Method","text":"<p>Usage : <code>echo Categories::lists(array $vars)</code></p> <p>This method will show the list of the Categories and Subcategories with the unordered list markup. </p> <p>example: </p> <pre><code>$vars = array(\n             'parent'    =&gt;  'parent',\n             'order_by'  =&gt;  '',\n             'sort'      =&gt;  'ASC',\n           )\necho Categories::lists($vars);\n</code></pre> <p>Explanation:</p> <ul> <li>parent, this is the parent of the category you want to show. No parent or empty means all categories will shows up. </li> <li>order_by, this is how you want the category ordered by. Available columns are : <code>id</code>, <code>name</code>, <code>slug</code>, <code>parent</code>, <code>desc</code> default is <code>id</code></li> <li>sort, this is the options how your categories sorted, Ascending <code>ASC</code>, or Descending <code>DESC</code>. Default is <code>ASC</code></li> </ul> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/categories.class/#name-method","title":"Name Method","text":"<p>Usage: <code>echo Categories::name(int '$id');</code></p> <p>Return: <code>string</code></p> <p>This method will get the name of Category for the specific ID.</p> <p>example:</p> <p>we have a list of categories with sample below :</p> ID Name 1 News 2 Article <pre><code>$catName = Categories::name(1);\necho $catName;\n</code></pre> <p>this will output <code>News</code>.</p> <pre><code>$catName = Categories::name(2);\necho $catName;\n</code></pre> <p>this will output <code>Article</code>.</p> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/categories.class/#getparent-method","title":"getParent Method","text":"<p>Usage: <code>echo Categories::getParent(int '$id');</code></p> <p>Return: <code>int</code></p> <p>This is to get the Parent ID of a speicific Category ID.</p> <p>example:</p> <p>we have a list of categories with sample below :</p> ID Name Parent 1 News 0 2 Article 0 3 Latest 1 <pre><code>$parent = Categories::getParent(3);\necho $parent;\n</code></pre> <p>this will output <code>1</code>.</p> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/categories.class/#delete-method","title":"Delete Method","text":"<p>Usage: <code>Categories::delete(int '$id');</code></p> <p>Return: <code>bool</code></p> <p>This method will delete a Category with a specific ID.</p> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/categories.class/#type-method","title":"Type Method","text":"<p>Usage: <code>Categories::type(int '$id');</code></p> <p>Return: <code>string</code></p> <p>This method will query the categories table and find the specific <code>id</code> and output the type of the category.</p> <p>example:</p> <p>we have a list of categories with sample below :</p> ID Name Parent Type 1 News 0 post 2 Article 0 post 3 Latest 1 post <pre><code>$type = Categories::type(3);\necho $type;\n</code></pre> <p>this will output <code>post</code>.</p> <p>See also:</p> <ul> <li>Db::result()</li> </ul>"},{"location":"api/control.class/","title":"Control Class","text":"<pre><code># filename: Control.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p> <p>This class is to load the controller at <code>inc/lib/Control</code> directories. Controllers needed to proccess the procedure and view the result at themes. </p> <p>This is the hierarchy of MVC, as GeniXCMS is using MVC structure. </p> <p>The controller divided into some parts.</p> <ul> <li>Ajax</li> <li>Frontend</li> <li>Backend</li> <li>Error</li> <li>Install</li> </ul> <p>This controller is flexible. You can create and add it at the Control Class to load it. </p>"},{"location":"api/control.class/#handler-method","title":"Handler Method","text":"<p>Warning</p> <p>This method is deprecated and will be removed on future updates</p> <p>Usage: <code>Control::handler((string) $vars)</code></p> <p>This method is to load the controller types.</p> <p>Example: </p> <p>We want to call the Frontend Controller, so use this to load it. </p> <p><code>Control::handler('frontend');</code></p> <p>This will load the Frontend Controller.</p>"},{"location":"api/control.class/#frontend-file-inclusion-method","title":"Frontend File Inclusion Method","text":"<p>Usage: <code>Control::incFront((string) $vars);</code></p> <p>This method will load the file at the Frontend directory if the file is exist. If not it will load the 404 not found page. </p> <p>This method is needed by <code>Control::frontend()</code> method. </p>"},{"location":"api/control.class/#backend-file-inclusion-method","title":"Backend File Inclusion Method","text":"<p>Usage: <code>Control::incBack((string) $vars);</code></p> <p>This method will load the file at the Backend directory if the file is exist. If not it will load the 404 not found page. </p> <p>This method is needed by <code>Control::backend()</code> method. </p>"},{"location":"api/control.class/#get-method","title":"Get Method","text":"<p>Usage: <code>Control::get(array $arr);</code></p> <p>This method used to get the http get request from URL. This work inside the Frontend method. On every get request, if the value is on the array the file will be include. This method is only run when the <code>SMART_URL</code> is set as <code>false</code>.</p>"},{"location":"api/control.class/#route-method","title":"Route Method","text":"<p>Usage: <code>Control::route(array $arr);</code></p> <p>This method used when the <code>SMART_URL</code> was set as <code>true</code> and it will read the request uri at the url. On every value is match at the <code>$arr</code> the file will be included.</p>"},{"location":"api/control.class/#frontend-method","title":"Frontend Method","text":"<p>Usage: <code>Control::frontend();</code></p> <p>This will handle the controller which file will be included at the Frontend controller.</p> <p>This method will call the file using <code>self::incFront((string) $vars)</code></p> <p>If the controller is not found, the 404 error will loaded.</p> <p>And Default controller is <code>default.control.php</code></p>"},{"location":"api/control.class/#how-to-load-your-own-controller","title":"How to load your own controller","text":"<p>This is simple. If you want to create your own controller and want to load it at the frontpage. Just create your controller at the Frontend Controller : <code>inc/lib/Control/Frontend</code> directory. </p> <p>After the file is ready, open the <code>Control.class.php</code> file, and go to the <code>public static method frontend()</code> method. </p> <p>There are some variables in arrays as the value; </p> <p><code>$arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss');</code></p> <p>Just add your controller name on it. If your file name is <code>store.control.php</code>. So the arrays become like this :</p> <p><code>$arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss', 'store');</code></p>"},{"location":"api/control.class/#backend-method","title":"Backend Method","text":"<p>Usage: <code>Control::backend();</code></p> <p>This will handle the controller which file will be included at the Backend controller.</p> <p>This method will call the file using <code>self::incBack((string) $vars)</code></p> <p>If the controller is not found, the 404 error will loaded.</p> <p>And Default controller is <code>default.control.php</code></p>"},{"location":"api/control.class/#error-method","title":"ERROR Method","text":"<p>Usage: <code>Control::error((string) $vars='',(string) $val'');</code></p> <p>This method is to load the Error handler. The default is 404 not found. </p> <p>There are some error page already built. Specially for the system error, eg: <code>404</code>, <code>400</code>, <code>403</code>, <code>500</code></p> <p>Those error page had specific header so when it loaded it will read by the system as it.</p> <p>Anothere error pages are : </p> <ul> <li>Database Error <code>db</code></li> <li>Unknown Error <code>unknown</code></li> <li>No Access error <code>noaccess</code></li> </ul>"},{"location":"api/control.class/#how-to-use-error-handler","title":"How to use Error Handler","text":"<p>Using error handle is simple. Below are some examples how to use it.</p>"},{"location":"api/control.class/#404-not-found-page","title":"404 Not Found Page","text":"<pre><code>$file = \"/path/to/file.php\";\nif ( file_exists($file) ) {\n    include($file);\n}else{\n    Control::error('404');\n}\n</code></pre>"},{"location":"api/control.class/#no-access-restricted-access","title":"No Access / Restricted Access","text":"<pre><code>if(User::access(2)){\n   echo \"You are ready to go.\";\n}else{\n   Control::error('noaccess');\n}\n</code></pre>"},{"location":"api/control.class/#database-error","title":"Database Error","text":"<pre><code>$mysqli = new mysqli($dbhost, $dbuser, $dbpass, $dbname);\n$sql = 'SELECT * FROM `table` WHERE `id` = '{$id}'';\n$db = $mysqli-&gt;query($sql);\nif(!$db){\n   Control::error('db', $mysqli-&gt;error);\n}\n</code></pre>"},{"location":"api/control.class/#creating-your-own-error-page","title":"Creating Your own Error Page","text":"<p>If yo want to use your error handler, just create a file at Error directory inside the Control directory.</p> <p>And load it when there is an error with your desired error pages.</p>"},{"location":"api/control.class/#ajax-method","title":"Ajax Method","text":"<p>This method used when we call the ajax request. All ajax file located at <code>inc/lib/Control/Ajax</code>. </p>"},{"location":"api/date.class/","title":"Date Class","text":"<pre><code># filename: Date.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.3\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>This Class is used to format and manage the date and timezone. </p>"},{"location":"api/date.class/#format-method","title":"Format Method","text":"<p>Usage: <code>Date::format(string $date, string $format);</code></p> <p>Return <code>string</code></p> <p>This method will format the date for specific format. As default it will format as <code>j F Y H:i A T</code>, date format according to PHP.NET Date Manual. Please read it if you want to change the date format. </p>"},{"location":"api/date.class/#local-method","title":"Local Method","text":"<p>Usage: <code>Date::local(string $date, string $format);</code></p> <p>Return <code>string</code></p> <p>This method will result as Local Date format according to the local timezone. The timezone is set at the backend dashboard.</p>"},{"location":"api/date.class/#timezone-method","title":"Timezone Method","text":"<p>Usage: <code>Date::TimeZone();</code></p> <p>Return <code>array</code></p> <p>This method will result the list of Timezone in array.</p>"},{"location":"api/date.class/#opttimezone-method","title":"optTimeZone Method","text":"<p>Usage: <code>Date::optTimeZone();</code></p> <p>return <code>string</code></p> <p>This method will result a list of timezone in an options markup. </p>"},{"location":"api/date.class/#country-options-dropdown","title":"Country Options Dropdown","text":"<p>Usage: <code>Date::optCountry(string $val);</code></p> <p>return <code>string</code></p> <p>This method will result a list of Country in a dropdown options. If the value of the variable was set, the country which same with the variable will be selected.</p>"},{"location":"api/date.class/#country-list-method","title":"Country List Method","text":"<p>Usage: <code>Date::countryList();</code></p> <p>Return <code>string</code></p> <p>This method will result the list of country in array.</p>"},{"location":"api/db.class/","title":"DB Class","text":"<pre><code># filename: Db.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p> <p>This class is for managing and for processing the database. We are using MySQL database. Right now there are two database driver used <code>mysqli</code>. And will be added in the next release for PDO driver.</p>"},{"location":"api/db.class/#constructor","title":"Constructor","text":"<p>Database connection executed on the constructor. All database settings are defined at the config.php file located at <code>inc/config/</code>. </p> <p>Constructor will connect database with configuration inside config.php on every load. The database configuration was defined during installation and saved on config.php file. </p>"},{"location":"api/db.class/#connect-method","title":"Connect Method","text":"<p>Usage: <code>Db::connect();</code> </p> <p>Result: <code>boolean</code></p> <p>This method was used to connect into database. Currently the connection type is just <code>mysqli</code>. Will be added more soon. </p> <p>To use the method is simple. When you create an independent file and need a database connection just execute it before run the query. </p> <pre><code>Db::connect();\n</code></pre> <p>When the configurations are not set, it takes from the config.php file. But when you want to connect into the different database, just run this.</p> <pre><code>Db::connect($host,$user,$pass,$dbname);\n</code></pre>"},{"location":"api/db.class/#query-method","title":"Query Method","text":"<p>Usage: <code>Db::query(string $var);</code></p> <p>Result: <code>array</code></p> <p>This method is used to query the database. To call e query is simple. See the sample below. </p> <pre><code>Db::query(\"SELECT * FROM `table_name` WHERE 1 LIMIT 1\");\n</code></pre> <p>Right now the query is still a simple query. In the future this had to be advanced query for better query.</p>"},{"location":"api/db.class/#result-method","title":"Result Method","text":"<p>Usage: <code>Db::result(array $arr);</code></p> <p>Result: <code>object</code></p> <p>This method used to get a list of data from table in an object structure. To use it see code below.</p> <pre><code>$data = Db::result(\"SELECT * FROM `cat` ORDER BY `id` LIMIT 10\");\n</code></pre> <p>This query will result :</p> <pre><code>Array\n(\n    [0] =&gt; stdClass Object\n        (\n            [id] =&gt; 1\n            [name] =&gt; News\n            [slug] =&gt; news\n            [parent] =&gt; 0\n            [desc] =&gt; \n            [type] =&gt; post\n        )\n\n    [1] =&gt; stdClass Object\n        (\n            [id] =&gt; 2\n            [name] =&gt; Info\n            [slug] =&gt; info\n            [parent] =&gt; 0\n            [desc] =&gt; \n            [type] =&gt; post\n        )\n);\n</code></pre>"},{"location":"api/db.class/#delete-method","title":"Delete Method","text":"<p>Usage: <code>Db::delete(int $id);</code></p> <p>Result: <code>bool</code></p> <p>This method used to delete a row of data at the table by specified where clause. See sample below :</p> <pre><code>$id = Typo::int($_GET['id']);\n$vars = array(\n          'table' =&gt; 'table', // table name\n          'where' =&gt; array(\n                         'id' =&gt; $id\n                     ), // where\n      );\n$del = Db::delete($vars);\n</code></pre> <p>The code above will delete data in a row which had the <code>$id</code> value.</p> <p>See also: </p> <ul> <li>Typo::int()</li> </ul>"},{"location":"api/db.class/#update-method","title":"Update Method","text":"<p>Usage: <code>Db::update(array $var);</code></p> <p>This method will update the specified row in a table by specific <code>$id</code>.</p> <p>See sample below :</p>"},{"location":"api/db.class/#array-mode","title":"Array Mode","text":"<p>This code used to insert data into database in array format.</p> <pre><code>$vars = array(\n          'table' =&gt; 'table', // table name\n          'id' =&gt; $_POST['id'],\n          'key' =&gt; array(\n                         'name' =&gt; $_POST['name'],\n                         'sex' =&gt; $_POST['sex']\n                     ), // where\n      );\n$update = Db::update($var);\n</code></pre>"},{"location":"api/db.class/#plain-mode","title":"Plain Mode","text":"<p>This code used to insert data into database in plain format.</p> <pre><code>$update = Db::update(\"UPDATE `table_name` SET `name`='{$_POST['name]}' WHERE `id` = '\".$_POST['id'].\"')\");\n</code></pre>"},{"location":"api/db.class/#insert-method","title":"Insert Method","text":"<p>Usage: <code>Db::insert(array $var);</code></p> <p>This method will insert data into the table on the database. See sample below :</p>"},{"location":"api/db.class/#array-mode_1","title":"Array Mode","text":"<p>This code used to insert data into database in array format.</p> <pre><code>$vars = array(\n          'table' =&gt; 'table', // table name\n          'key' =&gt; array(\n                         'name' =&gt; $_POST['name']\n                         'sex' =&gt; $_POST['sex']\n                     ), // where\n      );\n$del = Db::insert($var);\n</code></pre>"},{"location":"api/db.class/#plain-mode_1","title":"Plain Mode","text":"<p>This code used to insert data into database in plain format.</p> <pre><code>$del = Db::insert(\"INSERT INTO `table_name` VALUES (null, '{$_POST['name]}')\");\n</code></pre>"},{"location":"api/db.class/#escape-method","title":"Escape Method","text":"<p>Usage: <code>Db::escape(string $string);</code></p> <p>This method used to escape string before submitted to database. We use MySQLi escape function to escape the characters.</p>"},{"location":"api/gxmain.class/","title":"GxMain Class","text":"<pre><code># filename: GxMain.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/image.class/","title":"Image Class","text":"<pre><code># filename: Images.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p> <p>Image processor class. This Class used to process images.</p>"},{"location":"api/image.class/#resize-method","title":"Resize Method","text":"<p>Usage: <code>Image::resize($src, $dst, $width, $height, $crop=0);</code></p> <p>Return: <code>boolean</code></p> <p>This method will resize image file and crop it in desired dimension. </p> <pre><code>$src = \"/path/to/image.jpg\"; // Source of the image\n$dst = \"/path/to/resized.jpg\"; // Destination of the resized image\n$width = \"470px\"; // Desired width dimension\n$height = \"290px\"; // Desired height dimension\n$crop = \"1\"; // Options to crop the image\n\nImage::resize($src, $dst, $width, $height, $crop);\n</code></pre> <p>That will resize image <code>/path/to/image.jpg</code> into <code>/path/to/resized.jpg</code> with width of 470px and height 290px and cropped.</p>"},{"location":"api/image.class/#compress-method","title":"Compress Method","text":"<p>Usage: <code>Image::compress_png($path, $max_quality);</code></p> <p>Return: <code>boolean</code></p> <p>This method will compress selected <code>png</code> type image. This method need image processor called pngquant it's free and opensource image processor. You can download and install it manually. Download it from https://pngquant.org</p> <p>Ubuntu/Debian Server : <code>apt-get install pngquant</code></p>"},{"location":"api/install.class/","title":"Install Class","text":"<pre><code># filename: Install.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p> <p>The Install Class used to install the script. It contains some method. </p>"},{"location":"api/install.class/#make-config-method","title":"Make Config Method","text":"<p>Usage : <code>Install::makeConfig($file);</code></p> <p>Return: <code>string</code></p> <p>This method will create a config file inside <code>inc/config/</code> during the installation proccess. Data taken from session. </p>"},{"location":"api/install.class/#create-table-method","title":"Create Table Method","text":"<p>Usage: <code>Install::createTable();</code></p> <p>Return: <code>boolean</code></p> <p>This will create the database table during the installation. </p>"},{"location":"api/mail.class/","title":"Mail Class","text":"<pre><code># filename: Mail.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/menus.class/","title":"Menus Class","text":"<pre><code># filename: Menus.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/mod.class/","title":"Mod Class","text":"<pre><code># filename: Mod.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/options.class/","title":"Options Class","text":"<pre><code># filename: Options.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/paging.class/","title":"Paging Class","text":"<pre><code># filename: Paging.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/pinger.class/","title":"Pinger Class","text":"<pre><code># filename: Pinger.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/posts.class/","title":"Posts Class","text":"<pre><code># filename: Posts.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/rss.class/","title":"Rss Class","text":"<pre><code># filename: Rss.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/session.class/","title":"Session Class","text":"<pre><code># filename: Session.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/site.class/","title":"Site Class","text":"<pre><code># filename: Site.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/sitemap.class/","title":"Sitemap Class","text":"<pre><code># filename: Sitemap.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/stats.class/","title":"Stats Class","text":"<pre><code># filename: Stats.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/system.class/","title":"System Class","text":"<pre><code># filename: System.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/theme.class/","title":"Theme Class","text":"<pre><code># filename: Theme.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/typo.class/","title":"Typo Class","text":"<pre><code># filename: Typo.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/upload.class/","title":"Upload Class","text":"<pre><code># filename: Upload.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/url.class/","title":"Url Class","text":"<pre><code># filename: Url.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"api/user.class/","title":"User Class","text":"<pre><code># filename: User.class.php\n# location: inc/lib/\n# package: GeniXCMS\n# since: 0.0.1\n# author: Puguh Wijayanto (metalgenix.id)\n# copyright: 2014-2024 Puguh Wijayanto\n# license: MIT License\n</code></pre> <p>Info</p> <p>This Documentation is still need improvement.</p>"},{"location":"user-guide/category/","title":"Categories","text":"<p>Posts need Category. Before creating a new post, it's better if we add new Category first. At least One Category. </p> <p>Click the Category Manager at the left menu. </p> <p></p> <p>On the top right, there is a button Add Category, click it and a modal window will appear. </p> <p></p> <p>Choose the parent category if any. If no category exist just left it blank.</p> <p>Fill in the name of the category, after all is set, click Save Changes button.</p> <p>After category was added, will appear a box with category name. </p> <p></p> <p>At the images, it shows two name. The top is Main Category, and The second is Sub Category. </p> <p>Apparently, the main category cannot edited yet. </p>"},{"location":"user-guide/configuration/","title":"Configuration","text":"<p>After You logged in to the Administrator area. Now it's time to Setting Up your site. </p> <p>Click on the Setting Menu on the left side.  A new page will shows up .</p> <p></p>"},{"location":"user-guide/configuration/#general-settings","title":"General Settings","text":"<p>There are some input fields appear. Fill in the necessary field. Especially :</p> <ul> <li>Website Slogan</li> <li>Website Keywords</li> <li>Website Description</li> </ul> <p>Those are important. Especially for SEO.</p> <p>After those are filled up, go to the next tab.</p> <p></p>"},{"location":"user-guide/configuration/#e-mail","title":"E-Mail","text":"<p>This page is for email sending features. There are some options to be picked. </p>"},{"location":"user-guide/configuration/#php-mail","title":"PHP Mail","text":"<p>If you want to send email just using your mail program just pick Mail at the Mail/SMTP options. And the other field is not necessary. </p>"},{"location":"user-guide/configuration/#smtp-server","title":"SMTP Server","text":"<p>If You want to use outgoing email using SMTP so pick SMTP at the Mail/SMTP options. And fill in other input. </p> <p>Choose whether the SMTP is using Plain Authentification or Use SSL. </p> <p>Fill the SMTP Mailserver, SMTP Username, and SMTP Password you had. </p> <p></p>"},{"location":"user-guide/configuration/#social","title":"Social","text":"<p>This is Optional. Depends on the Themes you are using. If no options of using this so left it blank. </p> <p></p>"},{"location":"user-guide/configuration/#logo","title":"Logo","text":""},{"location":"user-guide/configuration/#logo_1","title":"Logo","text":"<p>Now it's time to personalize your site. Upload Your own Logo. Choose a small images please, so it won't make your site bloating. You can choose wheter Upload it by your self or just use already online Logo. </p> <p>If you want to use already uploaded logo at the internet, just thick the checkbox button at the Use Image URL and paste the image address. </p> <p>It automatically will use the image url rather than the Uploaded Logo. </p>"},{"location":"user-guide/configuration/#favicon","title":"Favicon","text":"<p>Insert your favicon url. Full url if i may say. Since it won't trouble when the SMART_URL is activated. </p> <p></p>"},{"location":"user-guide/configuration/#library","title":"Library","text":"<p>These are the dependencies we had to load for website to work well. We need :</p> <ul> <li>jQuery</li> <li>Fontawesome</li> <li>Bootstrap</li> <li>Summernote Editor</li> <li>Bootstrap Validator</li> </ul> <p>jQuery and Fontawesome are from CDN and others are at assets directory.</p> <p>For jQuery, You can input which version you wanto to use. Just fill in the version number. Others are still not supported yet. </p> <p></p>"},{"location":"user-guide/configuration/#posts","title":"Posts","text":"<p>Post Per Page is the Options how many posts are appear at the front page. </p> <p>Pinger is an address of Pinger for search engine. We already insert some. Just add it if you want.</p> <p>Pagination type, there are two options. First is Number, and second is Pager. Number means the page will shows as numbers. and pager the page will shows as Prev and Next.</p> <p></p>"},{"location":"user-guide/configuration/#payment","title":"Payment","text":"<p>Currently We are still in developing the Payment Class. Especially the PayPal Class. </p> <p>Even that, this field is functional. And can be run, see our sample store SerieShop2 </p>"},{"location":"user-guide/dashboard/","title":"Dashboard","text":"<p>Dashboard is the administrator area for managing the CMS. It's Bootstrap based layout, so it is mobile friendly. </p> <p>Basically, at the dashboard shows the statistics of the sites. Including latest posts, and amount of posts and pages. </p> <p>Will be added more statistics on the next update.</p> <p>Dashboard will Show at the first time when you logged in to administrator area.</p> <p></p>"},{"location":"user-guide/installation/","title":"Installation","text":"<p>Installing GeniXCMS is easy. Below are some step to follow to install GeniXCMS from zero. </p>"},{"location":"user-guide/installation/#requirements","title":"Requirements","text":"<p>Before starting installation, please make sure your webserver is meet this requirements.</p> <ul> <li>Using PHP &gt;= 8</li> <li>Using MySQL Server at least version 4</li> </ul> <p>That's the minimal requirements we need. But don't forget to install the webserver already. Since this application will run on the webserver. You can use any kinds webserver as you want. </p>"},{"location":"user-guide/installation/#recommendation","title":"Recommendation","text":"<ul> <li>Nginx Server + PHP-FPM</li> <li>MariaDB Server</li> </ul>"},{"location":"user-guide/installation/#uploading-files","title":"Uploading Files","text":"<p>Before we install the CMS, we had to put the files into the webserver. Depends on the hosting you are using, this is basically the same proccess to all hosting provider.</p> <p>You can upload it via FTP, or File Managers on the Control Panel. Please Ask your hosting provider about how to do this. </p>"},{"location":"user-guide/installation/#file-permission","title":"File Permission","text":"<p>The next step is setting up the file permission so it can be write during the installation proccess. Please set the permission of these files to 777 (writable).</p> <ul> <li>inc/config</li> <li>assets/images</li> <li>assets/images/uploads</li> <li>assets/images/uploads/thumbs</li> <li>assets/media/audios</li> <li>assets/media/images</li> <li>assets/media/videos</li> </ul> <p></p>"},{"location":"user-guide/installation/#preparing-database","title":"Preparing Database","text":"<p>Installation cannot be run before the database is set. So, go to the Database manager at your Hosting Control Panel and create new database, and assign the user to the database. </p> <p>Save the database username, database name and database the password. We will need this for the next step.</p> <p></p>"},{"location":"user-guide/installation/#run-the-installation","title":"Run the installation","text":"<p>To run the installer is simple. Just open your site at the browser. An installation wizard will shows up. Just fill in the field and follow the wizard until finish. </p> <p></p>"},{"location":"user-guide/installation/#login-dashboard","title":"Login Dashboard","text":"<p>After the installation is done. Now follow the link at the end of the installation and login to dashboard.</p> <p>Login with Username and Password just You submit.</p>"},{"location":"user-guide/menus/","title":"Menus","text":"<p>Open the Menu manager at the left. Click the Menus link. </p> <p></p> <p>There are two menus already provided. So, You don't need to create a new one. </p> <p><code>mainmenu</code> and <code>footer</code> is the Menu ID. Use it to call the menu at the template. </p> <p>Click one of the menu. It will shows list of menu items like this </p> <p></p> <p></p>"},{"location":"user-guide/menus/#add-item","title":"Add Item","text":"<p>To add a Menu item just click the Add Item tab, a new tab will appear. </p> <p></p> <p>To create a main menu, Left the Parent Menu blank. But if it's a submenu, choose the parent menu. </p> <p>After that, Input the Menu Name. eg: About Us, Profile, etc..</p> <p>Menu Class is used if your themes need the menu item had a specific css class. If not, left it blank.</p>"},{"location":"user-guide/menus/#menu-type","title":"Menu Type","text":"<p>There are some menu types provided. Page, Categories, Mod, and Custom Link.</p> <p>Pick one of them as you want. But don't forget to check the radio button. </p>"},{"location":"user-guide/mod/","title":"Mod","text":""},{"location":"user-guide/pages/","title":"Pages","text":"<p>On the left Menu, Click the Pages menu. A new page will appear with empty list. </p> <p></p> <p>To make a new pages. Just click at the top right button named Add New. A new page with a form will shows. </p> <p></p> <p>Insert the Post title, Post content, and Publish it. </p> <p></p> <p>There are two options for page, Publish status and Dates. You can modify it as you like.</p> <p></p> <p>After a post is submited back to the pages manager and see if the page is submitted succesfully. </p> <p></p> <p>To edit or delete the page, there are some options at the right of the page. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button. </p>"},{"location":"user-guide/posts/","title":"Posts","text":"<p>On the left Menu, Click the Posts menu. A new page will appear with empty list. </p> <p></p> <p>To make a new post. Just click at the top right button named Add New. A new page with a form will shows. </p> <p></p> <p>Insert the Post title, Post content, Pick a Category and Publish it. </p> <p></p> <p>There are some options, Category, Publish status and Dates. You can modify it as you like.</p> <p></p> <p>After a post is submited back to the posts manager and see if the post is submitted succesfully. </p> <p></p> <p>To edit or delete the post, there are some options at the right of the post. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button. </p>"},{"location":"user-guide/users/","title":"Users","text":"<p>This is the dashboard for User Manager.  In here will shows list of users with two group, as Administrator and General Members. </p>"},{"location":"user-guide/users/#creating-user","title":"Creating User","text":"<p>Creating a user is just one step. Click on the Add User button. </p> <p></p> <p>A new modal windows will appear like this .</p> <p></p> <p>Fill in all the field, choose the group level and click Save Changes.</p>"},{"location":"user-guide/users/#editing-user","title":"Editing User","text":"<p>To edit the user, choose one of the user and click the edit button at the right. </p> <p></p> <p>A new page will shows up with the Edit User form on it. </p> <p></p> <p>Change the field as you desired and click Update on the top right.</p>"},{"location":"user-guide/users/#deleting-user","title":"Deleting User","text":"<p>To Delete a user, just choose the user and click the Delete button on the right. </p> <p></p>"}]}