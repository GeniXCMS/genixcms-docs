{
    "docs": [
        {
            "location": "/",
            "text": "GeniXCMS Documentation\n\n\n\n\nThis is a Documentation page of \nGeniXCMS\n. We will explain more details about how to use and make a good applications with \nGeniXCMS\n.\n\n\n\n\nDevelopment\n\n\n\n\nCurrently, we are still in a development progress. Including this documentation.\n\n\nJoin us and contributing with us to make a great app.",
            "title": "Home"
        },
        {
            "location": "/#genixcms-documentation",
            "text": "This is a Documentation page of  GeniXCMS . We will explain more details about how to use and make a good applications with  GeniXCMS .",
            "title": "GeniXCMS Documentation"
        },
        {
            "location": "/#development",
            "text": "Currently, we are still in a development progress. Including this documentation.  Join us and contributing with us to make a great app.",
            "title": "Development"
        },
        {
            "location": "/about/about/",
            "text": "About GeniXCMS\n\n\n\n\nGeniXCMS\n is a PHP Based Content Management System and Framework (\nCMSF\n). It's a simple and lightweight of CMSF. Very suitable for \nIntermediate PHP developer\n to \nAdvanced Developer\n. Some manual configurations needed to make this application to work. \n\n\n\n\nWhy GeniXCMS\n\n\n\n\nThis CMSF is a starter point to build your own online applications. With already build \nUser manager\n, \nContent manager\n (\nPost\n, \nPages\n), \nMenu manager\n, etc made you easy to add your own code and build your own custom web applications. \n\n\n\n\nCredits\n\n\n\n\nGeniXCMS\n is using some of \nFOSS\n (free and opensource software) like :\n\n\n\n\nTwitter \nBootstrap\n, \n\n\nSummernote\n Text Editor, \n\n\nJQuery\n, \n\n\nPHP\n, \n\n\nMySQL\n, \n\n\nSB-Admin 2\n,\n\n\nBootstrap Validator\n,\n\n\netc.\n\n\n\n\n\n\nRequirements\n\n\n\n\n\n\nPHP >=\n5.5.9\n\n\nMySQL >=\n4\n\n\n\n\n\n\nShowcase\n\n\n\n\nShowcase URL : \nhttp://demo.genix.id\n\n\n\n\nLicense\n\n\n\n\nGeniXCMS\n License : \nMIT License\n\n\n\n\nWebsite\n\n\n\n\nLink : \nhttp://www.genix.id\n\n\n\n\nDeveloper\n\n\n\n\nDeveloped by : Puguh Wijayanto - \nhttp://www.metalgenix.com",
            "title": "About"
        },
        {
            "location": "/about/about/#about-genixcms",
            "text": "GeniXCMS  is a PHP Based Content Management System and Framework ( CMSF ). It's a simple and lightweight of CMSF. Very suitable for  Intermediate PHP developer  to  Advanced Developer . Some manual configurations needed to make this application to work.",
            "title": "About GeniXCMS"
        },
        {
            "location": "/about/about/#why-genixcms",
            "text": "This CMSF is a starter point to build your own online applications. With already build  User manager ,  Content manager  ( Post ,  Pages ),  Menu manager , etc made you easy to add your own code and build your own custom web applications.",
            "title": "Why GeniXCMS"
        },
        {
            "location": "/about/about/#credits",
            "text": "GeniXCMS  is using some of  FOSS  (free and opensource software) like :   Twitter  Bootstrap ,   Summernote  Text Editor,   JQuery ,   PHP ,   MySQL ,   SB-Admin 2 ,  Bootstrap Validator ,  etc.",
            "title": "Credits"
        },
        {
            "location": "/about/about/#requirements",
            "text": "PHP >= 5.5.9  MySQL >= 4",
            "title": "Requirements"
        },
        {
            "location": "/about/about/#showcase",
            "text": "Showcase URL :  http://demo.genix.id",
            "title": "Showcase"
        },
        {
            "location": "/about/about/#license",
            "text": "GeniXCMS  License :  MIT License",
            "title": "License"
        },
        {
            "location": "/about/about/#website",
            "text": "Link :  http://www.genix.id",
            "title": "Website"
        },
        {
            "location": "/about/about/#developer",
            "text": "Developed by : Puguh Wijayanto -  http://www.metalgenix.com",
            "title": "Developer"
        },
        {
            "location": "/about/license/",
            "text": "License\n\n\n\n\nThe MIT License (MIT)\n\n\nCopyright (c) 2016 Puguh Wijayanto (www.metalgenix.com)\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
            "title": "License"
        },
        {
            "location": "/about/license/#license",
            "text": "The MIT License (MIT)  Copyright (c) 2016 Puguh Wijayanto (www.metalgenix.com)  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
            "title": "License"
        },
        {
            "location": "/about/credits/",
            "text": "Credits\n\n\n\n\nGeniXCMS\n was built using some \nOpensource\n and \nFree Libraries\n or codes and helped by many contributors. We had a big help from them. The communities are our mentor. Below are the list of Free and Opensource applications, libraries and codes that helped us to build GeniXCMS.\n\n\nFrontend\n\n\n\n\n\n\nBootstrap CSS Framework\n\n\nFontawesome Icon\n\n\nSummernote Text Editor\n\n\nSummernote Floats BS\n\n\nSummernote Image Attribute\n\n\n\n\n\n\nSB-Admin 2 Admin Dashboard\n\n\nJQuery & JQuery UI\n\n\nHighlightJS\n\n\nFlag Icon\n\n\nBootstrap Validator\n\n\njQuery Tags Input\n\n\nBootstrap DateTime Picker\n\n\n\n\n\n\nBackend\n\n\n\n\n\n\nLinux Server\n\n\nPHP\n\n\nMySQL\n\n\nNginx\n\n\nImageMagick\n\n\nPNGQuant\n\n\nComposer\n\n\nGoogle Recaptcha\n\n\nGuzzleHttp\n\n\nPHP-IXR\n\n\nOAuth Client \n\n\nOmnipay\n\n\nPHPMailer\n\n\nelFinder\n\n\nSymfony",
            "title": "Credits"
        },
        {
            "location": "/about/credits/#credits",
            "text": "GeniXCMS  was built using some  Opensource  and  Free Libraries  or codes and helped by many contributors. We had a big help from them. The communities are our mentor. Below are the list of Free and Opensource applications, libraries and codes that helped us to build GeniXCMS.",
            "title": "Credits"
        },
        {
            "location": "/about/credits/#frontend",
            "text": "Bootstrap CSS Framework  Fontawesome Icon  Summernote Text Editor  Summernote Floats BS  Summernote Image Attribute    SB-Admin 2 Admin Dashboard  JQuery & JQuery UI  HighlightJS  Flag Icon  Bootstrap Validator  jQuery Tags Input  Bootstrap DateTime Picker",
            "title": "Frontend"
        },
        {
            "location": "/about/credits/#backend",
            "text": "Linux Server  PHP  MySQL  Nginx  ImageMagick  PNGQuant  Composer  Google Recaptcha  GuzzleHttp  PHP-IXR  OAuth Client   Omnipay  PHPMailer  elFinder  Symfony",
            "title": "Backend"
        },
        {
            "location": "/user-guide/installation/",
            "text": "Installation\n\n\n\n\nInstalling \nGeniXCMS\n is easy. Below are some step to follow to install GeniXCMS from zero.\n\n\n\nRequirements\n\n\n\n\nBefore starting installation, please make sure your webserver is meet this requirements.\n\n\n\n\nUsing PHP >= \n5.5.9\n\n\nUsing MySQL Server at least version 4\n\n\n\n\nThat's the minimal requirements we need. But don't forget to install the \nwebserver\n already. Since this application will run on the webserver. You can use any kinds webserver as you want. \n\n\nRecommendation\n\n\n\n\nNginx Server\n + PHP-FPM\n\n\nMariaDB\n Server\n\n\n\n\n\n\nUploading Files\n\n\n\n\nBefore we install the \nCMS\n, we had to put the files into the webserver. Depends on the hosting you are using, this is basically the same proccess to all hosting provider.\n\n\nYou can upload it via FTP, or File Managers on the Control Panel. Please Ask your hosting provider about how to do this. \n\n\nFile Permission\n\n\nThe next step is setting up the file permission so it can be write during the installation proccess. Please set the permission of these files to \n777\n (\nwritable\n).\n\n\n\n\ninc/\nconfig\n\n\nassets/\nimages\n\n\nassets/images/\nuploads\n\n\nassets/images/uploads/\nthumbs\n\n\nassets/media/\naudios\n\n\nassets/media/\nimages\n\n\nassets/media/\nvideos\n\n\n\n\n\n\nPreparing Database\n\n\n\n\nInstallation cannot be run before the database is set. So, go to the \nDatabase manager\n at your Hosting Control Panel and \ncreate new database\n, and \nassign the user to the database\n. \n\n\nSave the \ndatabase username\n, \ndatabase name\n and \ndatabase the password\n. We will need this for the next step.\n\n\n\n\nRun the installation\n\n\n\n\nTo run the installer is simple. Just open your site at the browser. An installation wizard will shows up. Just fill in the field and follow the wizard until finish. \n\n\n\n\nLogin Dashboard\n\n\n\n\nAfter the installation is done. Now follow the link at the end of the installation and login to dashboard.\n\n\nLogin with \nUsername\n and \nPassword\n just You submit.",
            "title": "Installation"
        },
        {
            "location": "/user-guide/installation/#installation",
            "text": "Installing  GeniXCMS  is easy. Below are some step to follow to install GeniXCMS from zero.",
            "title": "Installation"
        },
        {
            "location": "/user-guide/installation/#requirements",
            "text": "Before starting installation, please make sure your webserver is meet this requirements.   Using PHP >=  5.5.9  Using MySQL Server at least version 4   That's the minimal requirements we need. But don't forget to install the  webserver  already. Since this application will run on the webserver. You can use any kinds webserver as you want.",
            "title": "Requirements"
        },
        {
            "location": "/user-guide/installation/#recommendation",
            "text": "Nginx Server  + PHP-FPM  MariaDB  Server",
            "title": "Recommendation"
        },
        {
            "location": "/user-guide/installation/#uploading-files",
            "text": "Before we install the  CMS , we had to put the files into the webserver. Depends on the hosting you are using, this is basically the same proccess to all hosting provider.  You can upload it via FTP, or File Managers on the Control Panel. Please Ask your hosting provider about how to do this.",
            "title": "Uploading Files"
        },
        {
            "location": "/user-guide/installation/#file-permission",
            "text": "The next step is setting up the file permission so it can be write during the installation proccess. Please set the permission of these files to  777  ( writable ).   inc/ config  assets/ images  assets/images/ uploads  assets/images/uploads/ thumbs  assets/media/ audios  assets/media/ images  assets/media/ videos",
            "title": "File Permission"
        },
        {
            "location": "/user-guide/installation/#preparing-database",
            "text": "Installation cannot be run before the database is set. So, go to the  Database manager  at your Hosting Control Panel and  create new database , and  assign the user to the database .   Save the  database username ,  database name  and  database the password . We will need this for the next step.",
            "title": "Preparing Database"
        },
        {
            "location": "/user-guide/installation/#run-the-installation",
            "text": "To run the installer is simple. Just open your site at the browser. An installation wizard will shows up. Just fill in the field and follow the wizard until finish.",
            "title": "Run the installation"
        },
        {
            "location": "/user-guide/installation/#login-dashboard",
            "text": "After the installation is done. Now follow the link at the end of the installation and login to dashboard.  Login with  Username  and  Password  just You submit.",
            "title": "Login Dashboard"
        },
        {
            "location": "/user-guide/dashboard/",
            "text": "Dashboard\n\n\n\n\nDashboard is the administrator area for managing the CMS. It's Bootstrap based layout, so it is mobile friendly. \n\n\nBasically, at the dashboard shows the statistics of the sites. Including latest posts, and amount of posts and pages. \n\n\nWill be added more statistics on the next update.\n\n\nDashboard will Show at the first time when you logged in to administrator area.",
            "title": "Dashboard"
        },
        {
            "location": "/user-guide/dashboard/#dashboard",
            "text": "Dashboard is the administrator area for managing the CMS. It's Bootstrap based layout, so it is mobile friendly.   Basically, at the dashboard shows the statistics of the sites. Including latest posts, and amount of posts and pages.   Will be added more statistics on the next update.  Dashboard will Show at the first time when you logged in to administrator area.",
            "title": "Dashboard"
        },
        {
            "location": "/user-guide/configuration/",
            "text": "Configuration\n\n\n\n\nAfter You logged in to the Administrator area. Now it's time to Setting Up your site. \n\n\nClick on the Setting Menu on the left side. \nA new page will shows up .\n\n\n\n\nGeneral Settings\n\n\n\n\n\n\nThere are some input fields appear. Fill in the necessary field. Especially :\n\n\n\n\nWebsite Slogan\n\n\nWebsite Keywords\n\n\nWebsite Description\n\n\n\n\nThose are important. Especially for SEO.\n\n\nAfter those are filled up, go to the next tab.\n\n\n\n\nE-Mail\n\n\n\n\n\n\nThis page is for email sending features. There are some options to be picked. \n\n\nPHP Mail\n\n\nIf you want to send email just using your mail program just pick \nMail\n at the \nMail/SMTP\n options. And the other field is not necessary. \n\n\nSMTP Server\n\n\nIf You want to use outgoing email using SMTP so pick \nSMTP\n at the \nMail/SMTP\n options. And fill in other input. \n\n\nChoose whether the SMTP is using Plain Authentification or Use SSL. \n\n\nFill the SMTP Mailserver, SMTP Username, and SMTP Password you had. \n\n\n\n\nSocial\n\n\n\n\nThis is Optional. Depends on the Themes you are using. If no options of using this so left it blank. \n\n\n\n\nLogo\n\n\n\n\n\n\nLogo\n\n\nNow it's time to personalize your site. Upload Your own Logo. \nChoose a small images\n please, so it won't make your site bloating. You can choose wheter Upload it by your self or just use already online Logo. \n\n\nIf you want to use already uploaded logo at the internet, just thick the checkbox button at the \nUse Image URL\n and paste the image address. \n\n\nIt automatically will use the image url rather than the Uploaded Logo. \n\n\nFavicon\n\n\nInsert your favicon url. Full url if i may say. Since it won't trouble when the \nSMART_URL\n is activated. \n\n\n\n\nLibrary\n\n\n\n\n\n\nThese are the dependencies we had to load for website to work well. We need :\n\n\n\n\njQuery\n\n\nFontawesome\n\n\nBootstrap\n\n\nSummernote Editor\n\n\nBootstrap Validator\n\n\n\n\njQuery and Fontawesome are from CDN and others are at assets directory.\n\n\nFor jQuery, You can input which version you wanto to use. Just fill in the version number. Others are still not supported yet. \n\n\n\n\nPosts\n\n\n\n\n\n\nPost Per Page\n is the Options how many posts are appear at the front page. \n\n\nPinger\n is an address of Pinger for search engine. We already insert some. Just add it if you want.\n\n\nPagination\n type, there are two options. First is Number, and second is Pager. \nNumber\n means the page will shows as numbers. and pager the page will shows as \nPrev\n and \nNext\n.\n\n\n\n\nPayment\n\n\n\n\n\n\nCurrently We are still in developing the Payment Class. Especially the \nPayPal Class\n. \n\n\nEven that, this field is functional. And can be run, see our sample store \nSerieShop2",
            "title": "Configuration"
        },
        {
            "location": "/user-guide/configuration/#configuration",
            "text": "After You logged in to the Administrator area. Now it's time to Setting Up your site.   Click on the Setting Menu on the left side. \nA new page will shows up .",
            "title": "Configuration"
        },
        {
            "location": "/user-guide/configuration/#general-settings",
            "text": "There are some input fields appear. Fill in the necessary field. Especially :   Website Slogan  Website Keywords  Website Description   Those are important. Especially for SEO.  After those are filled up, go to the next tab.",
            "title": "General Settings"
        },
        {
            "location": "/user-guide/configuration/#e-mail",
            "text": "This page is for email sending features. There are some options to be picked.",
            "title": "E-Mail"
        },
        {
            "location": "/user-guide/configuration/#php-mail",
            "text": "If you want to send email just using your mail program just pick  Mail  at the  Mail/SMTP  options. And the other field is not necessary.",
            "title": "PHP Mail"
        },
        {
            "location": "/user-guide/configuration/#smtp-server",
            "text": "If You want to use outgoing email using SMTP so pick  SMTP  at the  Mail/SMTP  options. And fill in other input.   Choose whether the SMTP is using Plain Authentification or Use SSL.   Fill the SMTP Mailserver, SMTP Username, and SMTP Password you had.",
            "title": "SMTP Server"
        },
        {
            "location": "/user-guide/configuration/#social",
            "text": "This is Optional. Depends on the Themes you are using. If no options of using this so left it blank.",
            "title": "Social"
        },
        {
            "location": "/user-guide/configuration/#logo",
            "text": "",
            "title": "Logo"
        },
        {
            "location": "/user-guide/configuration/#logo_1",
            "text": "Now it's time to personalize your site. Upload Your own Logo.  Choose a small images  please, so it won't make your site bloating. You can choose wheter Upload it by your self or just use already online Logo.   If you want to use already uploaded logo at the internet, just thick the checkbox button at the  Use Image URL  and paste the image address.   It automatically will use the image url rather than the Uploaded Logo.",
            "title": "Logo"
        },
        {
            "location": "/user-guide/configuration/#favicon",
            "text": "Insert your favicon url. Full url if i may say. Since it won't trouble when the  SMART_URL  is activated.",
            "title": "Favicon"
        },
        {
            "location": "/user-guide/configuration/#library",
            "text": "These are the dependencies we had to load for website to work well. We need :   jQuery  Fontawesome  Bootstrap  Summernote Editor  Bootstrap Validator   jQuery and Fontawesome are from CDN and others are at assets directory.  For jQuery, You can input which version you wanto to use. Just fill in the version number. Others are still not supported yet.",
            "title": "Library"
        },
        {
            "location": "/user-guide/configuration/#posts",
            "text": "Post Per Page  is the Options how many posts are appear at the front page.   Pinger  is an address of Pinger for search engine. We already insert some. Just add it if you want.  Pagination  type, there are two options. First is Number, and second is Pager.  Number  means the page will shows as numbers. and pager the page will shows as  Prev  and  Next .",
            "title": "Posts"
        },
        {
            "location": "/user-guide/configuration/#payment",
            "text": "Currently We are still in developing the Payment Class. Especially the  PayPal Class .   Even that, this field is functional. And can be run, see our sample store  SerieShop2",
            "title": "Payment"
        },
        {
            "location": "/user-guide/posts/",
            "text": "Posts\n\n\n\n\nOn the left Menu, Click the \nPosts\n menu. A new page will appear with empty list. \n\n\n\n\nTo make a new post. Just click at the top right button named \nAdd New\n. A new page with a form will shows. \n\n\n\n\nInsert the Post title, Post content, Pick a Category and Publish it. \n\n\n\n\nThere are some options, \nCategory\n, \nPublish status\n and \nDates\n. You can modify it as you like.\n\n\n\n\nAfter a post is submited back to the posts manager and see if the post is submitted succesfully. \n\n\n\n\nTo edit or delete the post, there are some options at the right of the post. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button.",
            "title": "Posts"
        },
        {
            "location": "/user-guide/posts/#posts",
            "text": "On the left Menu, Click the  Posts  menu. A new page will appear with empty list.    To make a new post. Just click at the top right button named  Add New . A new page with a form will shows.    Insert the Post title, Post content, Pick a Category and Publish it.    There are some options,  Category ,  Publish status  and  Dates . You can modify it as you like.   After a post is submited back to the posts manager and see if the post is submitted succesfully.    To edit or delete the post, there are some options at the right of the post. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button.",
            "title": "Posts"
        },
        {
            "location": "/user-guide/category/",
            "text": "Categories\n\n\n\n\nPosts need \nCategory\n. Before creating a new post, it's better if we add new Category first. At least One Category. \n\n\nClick the Category Manager at the left menu. \n\n\n\n\nOn the top right, there is a button \nAdd Category\n, click it and a modal window will appear. \n\n\n\n\nChoose the parent category if any. If no category exist just left it blank.\n\n\nFill in the name of the category, after all is set, click \nSave Changes\n button.\n\n\nAfter category was added, will appear a box with category name. \n\n\n\n\nAt the images, it shows two name. The top is \nMain Category\n, and The second is \nSub Category\n. \n\n\nApparently, the main category cannot edited yet.",
            "title": "Categories"
        },
        {
            "location": "/user-guide/category/#categories",
            "text": "Posts need  Category . Before creating a new post, it's better if we add new Category first. At least One Category.   Click the Category Manager at the left menu.    On the top right, there is a button  Add Category , click it and a modal window will appear.    Choose the parent category if any. If no category exist just left it blank.  Fill in the name of the category, after all is set, click  Save Changes  button.  After category was added, will appear a box with category name.    At the images, it shows two name. The top is  Main Category , and The second is  Sub Category .   Apparently, the main category cannot edited yet.",
            "title": "Categories"
        },
        {
            "location": "/user-guide/pages/",
            "text": "Pages\n\n\n\n\nOn the left Menu, Click the \nPages\n menu. A new page will appear with empty list. \n\n\n\n\nTo make a new pages. Just click at the top right button named \nAdd New\n. A new page with a form will shows. \n\n\n\n\nInsert the Post title, Post content, and Publish it. \n\n\n\n\nThere are two options for page, \nPublish status\n and \nDates\n. You can modify it as you like.\n\n\n\n\nAfter a post is submited back to the pages manager and see if the page is submitted succesfully. \n\n\n\n\nTo edit or delete the page, there are some options at the right of the page. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button.",
            "title": "Pages"
        },
        {
            "location": "/user-guide/pages/#pages",
            "text": "On the left Menu, Click the  Pages  menu. A new page will appear with empty list.    To make a new pages. Just click at the top right button named  Add New . A new page with a form will shows.    Insert the Post title, Post content, and Publish it.    There are two options for page,  Publish status  and  Dates . You can modify it as you like.   After a post is submited back to the pages manager and see if the page is submitted succesfully.    To edit or delete the page, there are some options at the right of the page. Edit, Delete and If you want to modify it massively, jusst check the checkbox and click the submit button.",
            "title": "Pages"
        },
        {
            "location": "/user-guide/users/",
            "text": "Users\n\n\n\n\nThis is the dashboard for User Manager.  In here will shows list of users with two group, as Administrator and General Members. \n\n\nCreating User\n\n\nCreating a user is just one step. Click on the Add User button. \n\n\n\n\nA new modal windows will appear like this .\n\n\n\n\nFill in all the field, choose the group level and click Save Changes.\n\n\nEditing User\n\n\nTo edit the user, choose one of the user and click the edit button at the right. \n\n\n\n\nA new page will shows up with the Edit User form on it. \n\n\n\n\nChange the field as you desired and click \nUpdate\n on the top right.\n\n\nDeleting User\n\n\nTo Delete a user, just choose the user and click the \nDelete\n button on the right.",
            "title": "Users"
        },
        {
            "location": "/user-guide/users/#users",
            "text": "This is the dashboard for User Manager.  In here will shows list of users with two group, as Administrator and General Members.",
            "title": "Users"
        },
        {
            "location": "/user-guide/users/#creating-user",
            "text": "Creating a user is just one step. Click on the Add User button.    A new modal windows will appear like this .   Fill in all the field, choose the group level and click Save Changes.",
            "title": "Creating User"
        },
        {
            "location": "/user-guide/users/#editing-user",
            "text": "To edit the user, choose one of the user and click the edit button at the right.    A new page will shows up with the Edit User form on it.    Change the field as you desired and click  Update  on the top right.",
            "title": "Editing User"
        },
        {
            "location": "/user-guide/users/#deleting-user",
            "text": "To Delete a user, just choose the user and click the  Delete  button on the right.",
            "title": "Deleting User"
        },
        {
            "location": "/user-guide/menus/",
            "text": "Menus\n\n\n\n\nOpen the Menu manager at the left. Click the Menus link. \n\n\n\n\nThere are two menus already provided. So, You don't need to create a new one. \n\n\nmainmenu\n and \nfooter\n is the Menu ID. Use it to call the menu at the template. \n\n\nClick one of the menu. It will shows list of menu items like this \n\n\n\n\n\n\nAdd Item\n\n\n\n\nTo add a Menu item just click the Add Item tab, a new tab will appear. \n\n\n\n\nTo create a main menu, Left the Parent Menu blank. But if it's a submenu, choose the parent menu. \n\n\nAfter that, Input the Menu Name. eg: About Us, Profile, etc..\n\n\nMenu Class is used if your themes need the menu item had a specific css class. If not, left it blank.\n\n\nMenu Type\n\n\nThere are some menu types provided. Page, Categories, Mod, and Custom Link.\n\n\nPick one of them as you want. But don't forget to check the radio button.",
            "title": "Menus"
        },
        {
            "location": "/user-guide/menus/#menus",
            "text": "Open the Menu manager at the left. Click the Menus link.    There are two menus already provided. So, You don't need to create a new one.   mainmenu  and  footer  is the Menu ID. Use it to call the menu at the template.   Click one of the menu. It will shows list of menu items like this",
            "title": "Menus"
        },
        {
            "location": "/user-guide/menus/#add-item",
            "text": "To add a Menu item just click the Add Item tab, a new tab will appear.    To create a main menu, Left the Parent Menu blank. But if it's a submenu, choose the parent menu.   After that, Input the Menu Name. eg: About Us, Profile, etc..  Menu Class is used if your themes need the menu item had a specific css class. If not, left it blank.",
            "title": "Add Item"
        },
        {
            "location": "/user-guide/menus/#menu-type",
            "text": "There are some menu types provided. Page, Categories, Mod, and Custom Link.  Pick one of them as you want. But don't forget to check the radio button.",
            "title": "Menu Type"
        },
        {
            "location": "/api/categories.class/",
            "text": "Categories Class\n\n\n@filename: Categories.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.\n\n\n\n\nThis class is to manage the Categories. This category structure is very simple. \n\n\nAn improvement probably added in the future. Below are the explanation each method at the Categories Class.\n\n\nDropdown Method\n\n\nUsage : \necho Categories::dropdown(array $vars);\n\n\nReturn: \nstring\n\n\nThis method to create an automatic dropdown options from available categories at the database. It means we can create dropdown so easy, just fill in the parameters and a \nselect input\n created automatically.\n\n\nExample:\n\n\n$vars = array(\n             'name'      =>  'catname',\n             'parent'    =>  'parent',\n             'order_by'  =>  '',\n             'sort'      =>  'ASC',\n           )\necho Categories::dropdown($vars);\n\n\n\n\nThat methods calls will create output like this.\n\n\n<select name=\"catname\" class=\"form-control\">\n    <option></option>\n    <option value=\"1\">Category Name</option>\n    ...\n</select>\n\n\n\n\n\nExplanation:\n\n\n\n\nname\n, this is the name  of the select input.\n\n\nparent\n, this is the parent of the category you want to show. No parent or \nempty\n means all categories will shows up. \n\n\norder_by\n, this is how you want the category ordered by. Available columns are : \nid\n, \nname\n, \nslug\n, \nparent\n, \ndesc\n default is \nid\n\n\nsort\n, this is the options how your categories sorted, Ascending \nASC\n, or Descending \nDESC\n. Default is \nASC\n\n\n\n\nSee also:\n\n\n\n\nDb::result()\n\n\n\n\nLists Method\n\n\nUsage : \necho Categories::lists(array $vars)\n\n\nThis method will show the list of the Categories with the unordered list markup. \n\n\nexample: \n\n\n$vars = array(\n             'name'      =>  'catname',\n             'parent'    =>  'parent',\n             'order_by'  =>  '',\n             'sort'      =>  'ASC',\n           )\necho Categories::lists($vars);\n\n\n\n\nExplanation:\n\n\n\n\nname\n, this is the name  of the select input.\n\n\nparent\n, this is the parent of the category you want to show. No parent or \nempty\n means all categories will shows up. \n\n\norder_by\n, this is how you want the category ordered by. Available columns are : \nid\n, \nname\n, \nslug\n, \nparent\n, \ndesc\n default is \nid\n\n\nsort\n, this is the options how your categories sorted, Ascending \nASC\n, or Descending \nDESC\n. Default is \nASC\n\n\n\n\nSee also:\n\n\n\n\nDb::result()\n\n\n\n\nName Method\n\n\nUsage: \necho Categories::name(int '$id');\n\n\nReturn: \nstring\n\n\nThis method will get the name of Category for the specific ID.\n\n\nexample:\n\n\nwe have a list of categories with sample below :\n\n\n\n\n\n\n\n\nID\n\n\nName\n\n\n\n\n\n\n\n\n\n\n1\n\n\nNews\n\n\n\n\n\n\n2\n\n\nArticle\n\n\n\n\n\n\n\n\n$cat = Categories::name(1);\necho $cat;\n\n\n\n\nthis will output \nNews\n.\n\n\nSee also:\n\n\n\n\nDb::result()\n\n\n\n\ngetParent Method\n\n\nUsage: \necho Categories::getParent(int '$id');\n\n\nReturn: \nint\n\n\nThis is to get the parent of a speicific ID.\n\n\nexample:\n\n\nwe have a list of categories with sample below :\n\n\n\n\n\n\n\n\nID\n\n\nName\n\n\nParent\n\n\n\n\n\n\n\n\n\n\n1\n\n\nNews\n\n\n0\n\n\n\n\n\n\n2\n\n\nArticle\n\n\n0\n\n\n\n\n\n\n3\n\n\nLatest\n\n\n1\n\n\n\n\n\n\n\n\n$parent = Categories::getParent(3);\necho $parent;\n\n\n\n\nthis will output \n1\n.\n\n\nSee also:\n\n\n\n\nDb::result()\n\n\n\n\nDelete Method\n\n\nUsage: \nCategories::delete(int '$id');\n\n\nReturn: \nbool\n\n\nThis method will delete Category with a specific ID.\n\n\nSee also:\n\n\n\n\nDb::result()\n\n\n\n\nType Method\n\n\nUsage: \nCategories::type(int '$id');\n\n\nReturn: \nstring\n\n\nThis method will query the categories table and find the specific \nid\n and output the type of the category.\n\n\nSee also:\n\n\n\n\nDb::result()",
            "title": "Categories Class"
        },
        {
            "location": "/api/categories.class/#categories-class",
            "text": "@filename: Categories.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.   This class is to manage the Categories. This category structure is very simple.   An improvement probably added in the future. Below are the explanation each method at the Categories Class.",
            "title": "Categories Class"
        },
        {
            "location": "/api/categories.class/#dropdown-method",
            "text": "Usage :  echo Categories::dropdown(array $vars);  Return:  string  This method to create an automatic dropdown options from available categories at the database. It means we can create dropdown so easy, just fill in the parameters and a  select input  created automatically.  Example:  $vars = array(\n             'name'      =>  'catname',\n             'parent'    =>  'parent',\n             'order_by'  =>  '',\n             'sort'      =>  'ASC',\n           )\necho Categories::dropdown($vars);  That methods calls will create output like this.  <select name=\"catname\" class=\"form-control\">\n    <option></option>\n    <option value=\"1\">Category Name</option>\n    ...\n</select>  Explanation:   name , this is the name  of the select input.  parent , this is the parent of the category you want to show. No parent or  empty  means all categories will shows up.   order_by , this is how you want the category ordered by. Available columns are :  id ,  name ,  slug ,  parent ,  desc  default is  id  sort , this is the options how your categories sorted, Ascending  ASC , or Descending  DESC . Default is  ASC   See also:   Db::result()",
            "title": "Dropdown Method"
        },
        {
            "location": "/api/categories.class/#lists-method",
            "text": "Usage :  echo Categories::lists(array $vars)  This method will show the list of the Categories with the unordered list markup.   example:   $vars = array(\n             'name'      =>  'catname',\n             'parent'    =>  'parent',\n             'order_by'  =>  '',\n             'sort'      =>  'ASC',\n           )\necho Categories::lists($vars);  Explanation:   name , this is the name  of the select input.  parent , this is the parent of the category you want to show. No parent or  empty  means all categories will shows up.   order_by , this is how you want the category ordered by. Available columns are :  id ,  name ,  slug ,  parent ,  desc  default is  id  sort , this is the options how your categories sorted, Ascending  ASC , or Descending  DESC . Default is  ASC   See also:   Db::result()",
            "title": "Lists Method"
        },
        {
            "location": "/api/categories.class/#name-method",
            "text": "Usage:  echo Categories::name(int '$id');  Return:  string  This method will get the name of Category for the specific ID.  example:  we have a list of categories with sample below :     ID  Name      1  News    2  Article     $cat = Categories::name(1);\necho $cat;  this will output  News .  See also:   Db::result()",
            "title": "Name Method"
        },
        {
            "location": "/api/categories.class/#getparent-method",
            "text": "Usage:  echo Categories::getParent(int '$id');  Return:  int  This is to get the parent of a speicific ID.  example:  we have a list of categories with sample below :     ID  Name  Parent      1  News  0    2  Article  0    3  Latest  1     $parent = Categories::getParent(3);\necho $parent;  this will output  1 .  See also:   Db::result()",
            "title": "getParent Method"
        },
        {
            "location": "/api/categories.class/#delete-method",
            "text": "Usage:  Categories::delete(int '$id');  Return:  bool  This method will delete Category with a specific ID.  See also:   Db::result()",
            "title": "Delete Method"
        },
        {
            "location": "/api/categories.class/#type-method",
            "text": "Usage:  Categories::type(int '$id');  Return:  string  This method will query the categories table and find the specific  id  and output the type of the category.  See also:   Db::result()",
            "title": "Type Method"
        },
        {
            "location": "/api/control.class/",
            "text": "Control Class\n\n\n@filename: Control.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.\n\n\n\n\nThis class is to load the controller at \ninc/lib/Control\n directories. Controllers needed to proccess the procedure and view the result at themes. \n\n\nThis is the hierarchy of MVC, as GeniXCMS is using MVC structure. \n\n\nThe controller divided into some parts.\n\n\n\n\nAjax\n\n\nFrontend\n\n\nBackend\n\n\nError\n\n\nInstall\n\n\n\n\nThis controller is flexible. You can create and add it at the \nControl Class\n to load it. \n\n\nHandler Method\n\n\n\n\nThis method is deprecated and will be removed on future updates\n\n\n\n\nUsage: \nControl::handler((string) $vars)\n\n\nThis method is to load the controller types.\n\n\nExample: \n\n\nWe want to call the \nFrontend Controller\n, so use this to load it. \n\n\nControl::handler('frontend');\n\n\nThis will load the Frontend Controller.\n\n\nFrontend File Inclusion Method\n\n\nUsage: \nControl::incFront((string) $vars);\n\n\nThis method will load the file at the Frontend directory if the file is exist. If not it will load the 404 not found page. \n\n\nThis method is needed by \nControl::frontend()\n method. \n\n\nBackend File Inclusion Method\n\n\nUsage: \nControl::incBack((string) $vars);\n\n\nThis method will load the file at the Backend directory if the file is exist. If not it will load the \n404\n not found page. \n\n\nThis method is needed by \nControl::backend()\n method. \n\n\nGet Method\n\n\nUsage: \nControl::get(array $arr);\n\n\nThis method used to get the http get request from URL. This work inside the Frontend method. On every get request, if the value is on the array the file will be include. This method is only run when the \nSMART_URL\n is set as \nfalse\n.\n\n\nRoute Method\n\n\nUsage: \nControl::route(array $arr);\n\n\nThis method used when the \nSMART_URL\n was set as \ntrue\n and it will read the request uri at the url. On every value is match at the \n$arr\n the file will be included.\n\n\nFrontend Method\n\n\nUsage: \nControl::frontend();\n\n\nThis will handle the controller which file will be included at the Frontend controller.\n\n\nThis method will call the file using \nself::incFront((string) $vars)\n\n\nIf the controller is not found, the 404 error will loaded.\n\n\nAnd Default controller is \ndefault.control.php\n\n\nHow to load your own controller\n\n\nThis is simple. If you want to create your own controller and want to load it at the frontpage. Just create your controller at the \nFrontend Controller\n \ninc/lib/Control/Frontend\n directory. \n\n\nAfter the file is ready, open the \nControl.class.php\n file, and go to the \npublic static method frontend()\n method. \n\n\nThere are some variables in arrays as the value; \n\n$arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss');\n\n\nJust add your controller name on it. If your file name is \nstore.control.php\n. So the arrays become like this :\n\n\n$arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss', 'store');\n\n\nBackend Method\n\n\nUsage: \nControl::backend();\n\n\nThis will handle the controller which file will be included at the Backend controller.\n\n\nThis method will call the file using \nself::incBack((string) $vars)\n\n\nIf the controller is not found, the 404 error will loaded.\n\n\nAnd Default controller is \ndefault.control.php\n\n\nERROR Method\n\n\nUsage: \nControl::error((string) $vars='',(string) $val'');\n\n\nThis method is to load the Error handler. The default is 404 not found. \n\n\nThere are some error page already built. Specially for the system error, eg: \n404\n, \n400\n, \n403\n, \n500\n\n\nThose error page had specific header so when it loaded it will read by the system as it.\n\n\nAnothere error pages are : \n\n\n\n\nDatabase Error \ndb\n\n\nUnknown Error \nunknown\n\n\nNo Access error \nnoaccess\n\n\n\n\nHow to use Error Handler\n\n\nUsing error handle is simple. Below are some examples how to use it.\n\n\n404 Not Found Page\n\n\n$file = \"/path/to/file.php\";\nif ( file_exists($file) ) {\n    include($file);\n}else{\n    Control::error('404');\n}\n\n\n\n\nNo Access / Restricted Access\n\n\nif(User::access(2)){\n   echo \"You are ready to go.\";\n}else{\n   Control::error('noaccess');\n}\n\n\n\n\nDatabase Error\n\n\n$mysqli = new mysqli($dbhost, $dbuser, $dbpass, $dbname);\n$sql = 'SELECT * FROM `table` WHERE `id` = '{$id}'';\n$db = $mysqli->query($sql);\nif(!$db){\n   Control::error('db', $mysqli->error);\n}\n\n\n\n\nCreating Your own Error Page\n\n\nIf yo want to use your error handler, just create a file at Error directory inside the Control directory.\n\n\nAnd load it when there is an error with your desired error pages.\n\n\nAjax Method\n\n\nThis method used when we call the ajax request. All ajax file located at \ninc/lib/Control/Ajax\n.",
            "title": "Control Class"
        },
        {
            "location": "/api/control.class/#control-class",
            "text": "@filename: Control.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.   This class is to load the controller at  inc/lib/Control  directories. Controllers needed to proccess the procedure and view the result at themes.   This is the hierarchy of MVC, as GeniXCMS is using MVC structure.   The controller divided into some parts.   Ajax  Frontend  Backend  Error  Install   This controller is flexible. You can create and add it at the  Control Class  to load it.",
            "title": "Control Class"
        },
        {
            "location": "/api/control.class/#handler-method",
            "text": "This method is deprecated and will be removed on future updates   Usage:  Control::handler((string) $vars)  This method is to load the controller types.  Example:   We want to call the  Frontend Controller , so use this to load it.   Control::handler('frontend');  This will load the Frontend Controller.",
            "title": "Handler Method"
        },
        {
            "location": "/api/control.class/#frontend-file-inclusion-method",
            "text": "Usage:  Control::incFront((string) $vars);  This method will load the file at the Frontend directory if the file is exist. If not it will load the 404 not found page.   This method is needed by  Control::frontend()  method.",
            "title": "Frontend File Inclusion Method"
        },
        {
            "location": "/api/control.class/#backend-file-inclusion-method",
            "text": "Usage:  Control::incBack((string) $vars);  This method will load the file at the Backend directory if the file is exist. If not it will load the  404  not found page.   This method is needed by  Control::backend()  method.",
            "title": "Backend File Inclusion Method"
        },
        {
            "location": "/api/control.class/#get-method",
            "text": "Usage:  Control::get(array $arr);  This method used to get the http get request from URL. This work inside the Frontend method. On every get request, if the value is on the array the file will be include. This method is only run when the  SMART_URL  is set as  false .",
            "title": "Get Method"
        },
        {
            "location": "/api/control.class/#route-method",
            "text": "Usage:  Control::route(array $arr);  This method used when the  SMART_URL  was set as  true  and it will read the request uri at the url. On every value is match at the  $arr  the file will be included.",
            "title": "Route Method"
        },
        {
            "location": "/api/control.class/#frontend-method",
            "text": "Usage:  Control::frontend();  This will handle the controller which file will be included at the Frontend controller.  This method will call the file using  self::incFront((string) $vars)  If the controller is not found, the 404 error will loaded.  And Default controller is  default.control.php",
            "title": "Frontend Method"
        },
        {
            "location": "/api/control.class/#how-to-load-your-own-controller",
            "text": "This is simple. If you want to create your own controller and want to load it at the frontpage. Just create your controller at the  Frontend Controller   inc/lib/Control/Frontend  directory.   After the file is ready, open the  Control.class.php  file, and go to the  public static method frontend()  method.   There are some variables in arrays as the value;  $arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss');  Just add your controller name on it. If your file name is  store.control.php . So the arrays become like this :  $arr = array ('post','page', 'cat', 'mod', 'sitemap', 'rss', 'store');",
            "title": "How to load your own controller"
        },
        {
            "location": "/api/control.class/#backend-method",
            "text": "Usage:  Control::backend();  This will handle the controller which file will be included at the Backend controller.  This method will call the file using  self::incBack((string) $vars)  If the controller is not found, the 404 error will loaded.  And Default controller is  default.control.php",
            "title": "Backend Method"
        },
        {
            "location": "/api/control.class/#error-method",
            "text": "Usage:  Control::error((string) $vars='',(string) $val'');  This method is to load the Error handler. The default is 404 not found.   There are some error page already built. Specially for the system error, eg:  404 ,  400 ,  403 ,  500  Those error page had specific header so when it loaded it will read by the system as it.  Anothere error pages are :    Database Error  db  Unknown Error  unknown  No Access error  noaccess",
            "title": "ERROR Method"
        },
        {
            "location": "/api/control.class/#how-to-use-error-handler",
            "text": "Using error handle is simple. Below are some examples how to use it.",
            "title": "How to use Error Handler"
        },
        {
            "location": "/api/control.class/#404-not-found-page",
            "text": "$file = \"/path/to/file.php\";\nif ( file_exists($file) ) {\n    include($file);\n}else{\n    Control::error('404');\n}",
            "title": "404 Not Found Page"
        },
        {
            "location": "/api/control.class/#no-access-restricted-access",
            "text": "if(User::access(2)){\n   echo \"You are ready to go.\";\n}else{\n   Control::error('noaccess');\n}",
            "title": "No Access / Restricted Access"
        },
        {
            "location": "/api/control.class/#database-error",
            "text": "$mysqli = new mysqli($dbhost, $dbuser, $dbpass, $dbname);\n$sql = 'SELECT * FROM `table` WHERE `id` = '{$id}'';\n$db = $mysqli->query($sql);\nif(!$db){\n   Control::error('db', $mysqli->error);\n}",
            "title": "Database Error"
        },
        {
            "location": "/api/control.class/#creating-your-own-error-page",
            "text": "If yo want to use your error handler, just create a file at Error directory inside the Control directory.  And load it when there is an error with your desired error pages.",
            "title": "Creating Your own Error Page"
        },
        {
            "location": "/api/control.class/#ajax-method",
            "text": "This method used when we call the ajax request. All ajax file located at  inc/lib/Control/Ajax .",
            "title": "Ajax Method"
        },
        {
            "location": "/api/date.class/",
            "text": "Date Class\n\n\n@filename: Date.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.3\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\nThis Class is used to format and manage the date and timezone. \n\n\nFormat Method\n\n\nUsage: \nDate::format(string $date, string $format);\n\n\nReturn \nstring\n\n\nThis method will format the date for specific format. As default it will format as \nj F Y H:i A T\n, date format according to \nPHP.NET Date Manual\n. Please read it if you want to change the date format. \n\n\nLocal Method\n\n\nUsage: \nDate::local(string $date, string $format);\n\n\nReturn \nstring\n\n\nThis method will result as Local Date format according to the local timezone. The timezone is set at the backend dashboard.\n\n\nTimezone Method\n\n\nUsage: \nDate::TimeZone();\n\n\nReturn \narray\n\n\nThis method will result the list of Timezone in array.\n\n\noptTimeZone Method\n\n\nUsage: \nDate::optTimeZone();\n\n\nreturn \nstring\n\n\nThis method will result a list of timezone in an options markup. \n\n\nCountry Options Dropdown\n\n\nUsage: \nDate::optCountry(string $val);\n\n\nreturn \nstring\n\n\nThis method will result a list of Country in a dropdown options. If the value of the variable was set, the country which same with the variable will be selected.\n\n\nCountry List Method\n\n\nUsage: \nDate::countryList();\n\n\nReturn \nstring\n\n\nThis method will result the list of country in array.",
            "title": "Date Class"
        },
        {
            "location": "/api/date.class/#date-class",
            "text": "@filename: Date.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.3\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License  This Class is used to format and manage the date and timezone.",
            "title": "Date Class"
        },
        {
            "location": "/api/date.class/#format-method",
            "text": "Usage:  Date::format(string $date, string $format);  Return  string  This method will format the date for specific format. As default it will format as  j F Y H:i A T , date format according to  PHP.NET Date Manual . Please read it if you want to change the date format.",
            "title": "Format Method"
        },
        {
            "location": "/api/date.class/#local-method",
            "text": "Usage:  Date::local(string $date, string $format);  Return  string  This method will result as Local Date format according to the local timezone. The timezone is set at the backend dashboard.",
            "title": "Local Method"
        },
        {
            "location": "/api/date.class/#timezone-method",
            "text": "Usage:  Date::TimeZone();  Return  array  This method will result the list of Timezone in array.",
            "title": "Timezone Method"
        },
        {
            "location": "/api/date.class/#opttimezone-method",
            "text": "Usage:  Date::optTimeZone();  return  string  This method will result a list of timezone in an options markup.",
            "title": "optTimeZone Method"
        },
        {
            "location": "/api/date.class/#country-options-dropdown",
            "text": "Usage:  Date::optCountry(string $val);  return  string  This method will result a list of Country in a dropdown options. If the value of the variable was set, the country which same with the variable will be selected.",
            "title": "Country Options Dropdown"
        },
        {
            "location": "/api/date.class/#country-list-method",
            "text": "Usage:  Date::countryList();  Return  string  This method will result the list of country in array.",
            "title": "Country List Method"
        },
        {
            "location": "/api/db.class/",
            "text": "DB Class\n\n\n@filename: Db.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.\n\n\n\n\nThis class is for managing and for processing the database. We are using MySQL database. Right now there are two database driver used, \nmysql\n and \nmysqli\n. And will be added in the next release for \nPDO\n driver.\n\n\nConstructor\n\n\nDatabase connection executed on the constructor. All database settings are defined at the \nconfig.php\n file located at \ninc/config/\n. \n\n\nConnect Method\n\n\nUsage: \nDb::connect();\n \n\n\nResult: ``\n\n\nThis method was used to connect into database. Currently the connection type is just \nmysqli\n. Will be added more soon. \n\n\nTo use the method is simple. When you create an independent file and need a database connection just execute it before run the query. \n\n\nDb::connect();\n\n\n\n\nWhen the configurations are not set, it takes fron the config.php file. But when you want to connect into the different database, just run this.\n\n\nDb::connect($host,$user,$pass,$dbname);\n\n\n\n\nQuery Method\n\n\nUsage: \nDb::query(string $var);\n\n\nResult: \narray\n\n\nThis method is used to query the database. To call e query is simple. See the sample below. \n\n\nDb::query(\"SELECT * FROM `table_name` WHERE 1 LIMIT 1\");\n\n\n\n\nRight now the query is still a simple query. In the future this had to be advanced query for better query.\n\n\nResult Method\n\n\nUsage: \nDb::result(array $arr);\n\n\nResult: \nobject\n\n\nThis method used to get a list of data from table in an object structure. To use it see code below.\n\n\n$data = Db::result(\"SELECT * FROM `table_name` ORDER BY `id` LIMIT 10\");\n\n\n\n\nThis query will result :\n\n\narray(\n    [0] -> array(\n                'name' => '',\n                'date' => ''\n            ),\n    [1] -> array(\n                'name' => '',\n                'date' => ''\n            ),\n);\n\n\n\n\nDelete Method\n\n\nUsage: \nDb::delete(int $id);\n\n\nResult: \nstring\n\n\nThis method used to delete a row of data at the table by specified where clause. See sample below :\n\n\n$id = Typo::int($_GET['id']);\n$vars = array(\n          'table' => 'table', // table name\n          'where' => array(\n                         'id' => $id\n                     ), // where\n      );\n$del = Db::delete($vars);\n\n\n\n\nThe code above will delete data in a row which had the \n$id\n value.\n\n\nUpdate Method\n\n\nUsage: \nDb::update(array $var);\n\n\nThis method will be update the specified row in a table by specific \n$id\n.\n\n\nSee sample below :\n\n\nArray Mode\n\n\nThis code used to insert data into database in array format.\n\n\n$vars = array(\n          'table' => 'table', // table name\n          'id' => $_POST['id'],\n          'key' => array(\n                         'name' => $_POST['name'],\n                         'sex' => $_POST['sex']\n                     ), // where\n      );\n$update = Db::update($var);\n\n\n\n\n\nPlain Mode\n\n\nThis code used to insert data into database in plain format.\n\n\n$update = Db::update(\"UPDATE `table_name` SET `name`='{$_POST['name]}' WHERE `id` = '\".$_POST['id'].\"')\");\n\n\n\n\nInsert Method\n\n\nUsage: \nDb::insert(array $var);\n\n\nThis method will insert data into the table on the database. See sample below :\n\n\nArray Mode\n\n\nThis code used to insert data into database in array format.\n\n\n$vars = array(\n          'table' => 'table', // table name\n          'key' => array(\n                         'name' => $_POST['name']\n                         'sex' => $_POST['sex']\n                     ), // where\n      );\n$del = Db::insert($var);\n\n\n\n\nPlain Mode\n\n\nThis code used to insert data into database in plain format.\n\n\n$del = Db::insert(\"INSERT INTO `table_name` VALUES (null, '{$_POST['name]}')\");\n\n\n\n\nEscape Method\n\n\nUsage: \nDb::escape(string $string);\n\n\nThis method used to escape string before submitted to database.",
            "title": "Db Class"
        },
        {
            "location": "/api/db.class/#db-class",
            "text": "@filename: Db.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.   This class is for managing and for processing the database. We are using MySQL database. Right now there are two database driver used,  mysql  and  mysqli . And will be added in the next release for  PDO  driver.",
            "title": "DB Class"
        },
        {
            "location": "/api/db.class/#constructor",
            "text": "Database connection executed on the constructor. All database settings are defined at the  config.php  file located at  inc/config/ .",
            "title": "Constructor"
        },
        {
            "location": "/api/db.class/#connect-method",
            "text": "Usage:  Db::connect();    Result: ``  This method was used to connect into database. Currently the connection type is just  mysqli . Will be added more soon.   To use the method is simple. When you create an independent file and need a database connection just execute it before run the query.   Db::connect();  When the configurations are not set, it takes fron the config.php file. But when you want to connect into the different database, just run this.  Db::connect($host,$user,$pass,$dbname);",
            "title": "Connect Method"
        },
        {
            "location": "/api/db.class/#query-method",
            "text": "Usage:  Db::query(string $var);  Result:  array  This method is used to query the database. To call e query is simple. See the sample below.   Db::query(\"SELECT * FROM `table_name` WHERE 1 LIMIT 1\");  Right now the query is still a simple query. In the future this had to be advanced query for better query.",
            "title": "Query Method"
        },
        {
            "location": "/api/db.class/#result-method",
            "text": "Usage:  Db::result(array $arr);  Result:  object  This method used to get a list of data from table in an object structure. To use it see code below.  $data = Db::result(\"SELECT * FROM `table_name` ORDER BY `id` LIMIT 10\");  This query will result :  array(\n    [0] -> array(\n                'name' => '',\n                'date' => ''\n            ),\n    [1] -> array(\n                'name' => '',\n                'date' => ''\n            ),\n);",
            "title": "Result Method"
        },
        {
            "location": "/api/db.class/#delete-method",
            "text": "Usage:  Db::delete(int $id);  Result:  string  This method used to delete a row of data at the table by specified where clause. See sample below :  $id = Typo::int($_GET['id']);\n$vars = array(\n          'table' => 'table', // table name\n          'where' => array(\n                         'id' => $id\n                     ), // where\n      );\n$del = Db::delete($vars);  The code above will delete data in a row which had the  $id  value.",
            "title": "Delete Method"
        },
        {
            "location": "/api/db.class/#update-method",
            "text": "Usage:  Db::update(array $var);  This method will be update the specified row in a table by specific  $id .  See sample below :",
            "title": "Update Method"
        },
        {
            "location": "/api/db.class/#array-mode",
            "text": "This code used to insert data into database in array format.  $vars = array(\n          'table' => 'table', // table name\n          'id' => $_POST['id'],\n          'key' => array(\n                         'name' => $_POST['name'],\n                         'sex' => $_POST['sex']\n                     ), // where\n      );\n$update = Db::update($var);",
            "title": "Array Mode"
        },
        {
            "location": "/api/db.class/#plain-mode",
            "text": "This code used to insert data into database in plain format.  $update = Db::update(\"UPDATE `table_name` SET `name`='{$_POST['name]}' WHERE `id` = '\".$_POST['id'].\"')\");",
            "title": "Plain Mode"
        },
        {
            "location": "/api/db.class/#insert-method",
            "text": "Usage:  Db::insert(array $var);  This method will insert data into the table on the database. See sample below :",
            "title": "Insert Method"
        },
        {
            "location": "/api/db.class/#array-mode_1",
            "text": "This code used to insert data into database in array format.  $vars = array(\n          'table' => 'table', // table name\n          'key' => array(\n                         'name' => $_POST['name']\n                         'sex' => $_POST['sex']\n                     ), // where\n      );\n$del = Db::insert($var);",
            "title": "Array Mode"
        },
        {
            "location": "/api/db.class/#plain-mode_1",
            "text": "This code used to insert data into database in plain format.  $del = Db::insert(\"INSERT INTO `table_name` VALUES (null, '{$_POST['name]}')\");",
            "title": "Plain Mode"
        },
        {
            "location": "/api/db.class/#escape-method",
            "text": "Usage:  Db::escape(string $string);  This method used to escape string before submitted to database.",
            "title": "Escape Method"
        },
        {
            "location": "/api/gxmain.class/",
            "text": "GxMain Class\n\n\n@filename: GxMain.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "GxMain Class"
        },
        {
            "location": "/api/gxmain.class/#gxmain-class",
            "text": "@filename: GxMain.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "GxMain Class"
        },
        {
            "location": "/api/image.class/",
            "text": "Image Class\n\n\n@filename: Images.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.\n\n\n\n\nImage processor class. This Class used to process images.\n\n\nResize Method\n\n\nUsage: \nImage::resize($src, $dst, $width, $height, $crop=0);\n\n\nReturn: \nboolean\n\n\nThis method will resize image file and crop it in desired dimension. \n\n\n$src = \"/path/to/image.jpg\"; // Source of the image\n$dst = \"/path/to/resized.jpg\"; // Destination of the resized image\n$width = \"470px\"; // Desired width dimension\n$height = \"290px\"; // Desired height dimension\n$crop = \"1\"; // Options to crop the image\n\nImage::resize($src, $dst, $width, $height, $crop);\n\n\n\n\nThat will resize image \n/path/to/image.jpg\n into \n/path/to/resized.jpg\n with width of \n470px\n and height \n290px\n and cropped.\n\n\nCompress Method\n\n\nUsage: \nImage::compress_png($path, $max_quality);\n\n\nReturn: \nboolean\n\n\nThis method will compress selected \npng\n type image. This method need image processor called \npngquant\n it's free and opensource image processor. You can download and install it manually. Download it from \nhttps://pngquant.org\n\n\nUbuntu/Debian Server : \napt-get install pngquant",
            "title": "Image Class"
        },
        {
            "location": "/api/image.class/#image-class",
            "text": "@filename: Images.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.   Image processor class. This Class used to process images.",
            "title": "Image Class"
        },
        {
            "location": "/api/image.class/#resize-method",
            "text": "Usage:  Image::resize($src, $dst, $width, $height, $crop=0);  Return:  boolean  This method will resize image file and crop it in desired dimension.   $src = \"/path/to/image.jpg\"; // Source of the image\n$dst = \"/path/to/resized.jpg\"; // Destination of the resized image\n$width = \"470px\"; // Desired width dimension\n$height = \"290px\"; // Desired height dimension\n$crop = \"1\"; // Options to crop the image\n\nImage::resize($src, $dst, $width, $height, $crop);  That will resize image  /path/to/image.jpg  into  /path/to/resized.jpg  with width of  470px  and height  290px  and cropped.",
            "title": "Resize Method"
        },
        {
            "location": "/api/image.class/#compress-method",
            "text": "Usage:  Image::compress_png($path, $max_quality);  Return:  boolean  This method will compress selected  png  type image. This method need image processor called  pngquant  it's free and opensource image processor. You can download and install it manually. Download it from  https://pngquant.org  Ubuntu/Debian Server :  apt-get install pngquant",
            "title": "Compress Method"
        },
        {
            "location": "/api/install.class/",
            "text": "Install Class\n\n\n@filename: Install.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.\n\n\n\n\nThe Install Class used to install the script. It contains some method. \n\n\nMake Config Method\n\n\nUsage : \nInstall::makeConfig($file);\n\n\nReturn: \nstring\n\n\nThis method will create a config file inside \ninc/config/\n during the installation proccess. Data taken from session. \n\n\nCreate Table Method\n\n\nUsage: \nInstall::createTable();\n\n\nReturn: \nboolean\n\n\nThis will create the database table during the installation.",
            "title": "Install Class"
        },
        {
            "location": "/api/install.class/#install-class",
            "text": "@filename: Install.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.   The Install Class used to install the script. It contains some method.",
            "title": "Install Class"
        },
        {
            "location": "/api/install.class/#make-config-method",
            "text": "Usage :  Install::makeConfig($file);  Return:  string  This method will create a config file inside  inc/config/  during the installation proccess. Data taken from session.",
            "title": "Make Config Method"
        },
        {
            "location": "/api/install.class/#create-table-method",
            "text": "Usage:  Install::createTable();  Return:  boolean  This will create the database table during the installation.",
            "title": "Create Table Method"
        },
        {
            "location": "/api/mail.class/",
            "text": "Mail Class\n\n\n@filename: Mail.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Mail Class"
        },
        {
            "location": "/api/mail.class/#mail-class",
            "text": "@filename: Mail.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Mail Class"
        },
        {
            "location": "/api/menus.class/",
            "text": "Menus Class\n\n\n@filename: Menus.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Menus Class"
        },
        {
            "location": "/api/menus.class/#menus-class",
            "text": "@filename: Menus.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Menus Class"
        },
        {
            "location": "/api/mod.class/",
            "text": "Mod Class\n\n\n@filename: Mod.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Mod Class"
        },
        {
            "location": "/api/mod.class/#mod-class",
            "text": "@filename: Mod.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Mod Class"
        },
        {
            "location": "/api/options.class/",
            "text": "Options Class\n\n\n@filename: Options.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Options Class"
        },
        {
            "location": "/api/options.class/#options-class",
            "text": "@filename: Options.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Options Class"
        },
        {
            "location": "/api/paging.class/",
            "text": "Paging Class\n\n\n@filename: Paging.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Paging Class"
        },
        {
            "location": "/api/paging.class/#paging-class",
            "text": "@filename: Paging.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Paging Class"
        },
        {
            "location": "/api/pinger.class/",
            "text": "Pinger Class\n\n\n@filename: Pinger.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Pinger Class"
        },
        {
            "location": "/api/pinger.class/#pinger-class",
            "text": "@filename: Pinger.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Pinger Class"
        },
        {
            "location": "/api/posts.class/",
            "text": "Posts Class\n\n\n@filename: Posts.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Posts Class"
        },
        {
            "location": "/api/posts.class/#posts-class",
            "text": "@filename: Posts.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Posts Class"
        },
        {
            "location": "/api/rss.class/",
            "text": "Rss Class\n\n\n@filename: Rss.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Rss Class"
        },
        {
            "location": "/api/rss.class/#rss-class",
            "text": "@filename: Rss.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Rss Class"
        },
        {
            "location": "/api/session.class/",
            "text": "Session Class\n\n\n@filename: Session.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Session Class"
        },
        {
            "location": "/api/session.class/#session-class",
            "text": "@filename: Session.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Session Class"
        },
        {
            "location": "/api/site.class/",
            "text": "Site Class\n\n\n@filename: Site.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Site Class"
        },
        {
            "location": "/api/site.class/#site-class",
            "text": "@filename: Site.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Site Class"
        },
        {
            "location": "/api/sitemap.class/",
            "text": "Sitemap Class\n\n\n@filename: Sitemap.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Sitemap Class"
        },
        {
            "location": "/api/sitemap.class/#sitemap-class",
            "text": "@filename: Sitemap.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Sitemap Class"
        },
        {
            "location": "/api/stats.class/",
            "text": "Stats Class\n\n\n@filename: Stats.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Stats Class"
        },
        {
            "location": "/api/stats.class/#stats-class",
            "text": "@filename: Stats.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Stats Class"
        },
        {
            "location": "/api/system.class/",
            "text": "System Class\n\n\n@filename: System.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "System Class"
        },
        {
            "location": "/api/system.class/#system-class",
            "text": "@filename: System.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "System Class"
        },
        {
            "location": "/api/theme.class/",
            "text": "Theme Class\n\n\n@filename: Theme.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Theme Class"
        },
        {
            "location": "/api/theme.class/#theme-class",
            "text": "@filename: Theme.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Theme Class"
        },
        {
            "location": "/api/typo.class/",
            "text": "Typo Class\n\n\n@filename: Typo.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Typo Class"
        },
        {
            "location": "/api/typo.class/#typo-class",
            "text": "@filename: Typo.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Typo Class"
        },
        {
            "location": "/api/upload.class/",
            "text": "Upload Class\n\n\n@filename: Upload.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Upload Class"
        },
        {
            "location": "/api/upload.class/#upload-class",
            "text": "@filename: Upload.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Upload Class"
        },
        {
            "location": "/api/url.class/",
            "text": "Url Class\n\n\n@filename: Url.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "Url Class"
        },
        {
            "location": "/api/url.class/#url-class",
            "text": "@filename: Url.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "Url Class"
        },
        {
            "location": "/api/user.class/",
            "text": "User Class\n\n\n@filename: User.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License\n\n\n\n\n\n\nThis Documentation is still need improvement.",
            "title": "User Class"
        },
        {
            "location": "/api/user.class/#user-class",
            "text": "@filename: User.class.php\n@location: inc/lib/\n@package: GeniXCMS\n@since: 0.0.1\n@author: Puguh Wijayanto (www.metalgenix.com)\n@copyright: 2014-2016 Puguh Wijayanto\n@license: MIT License   This Documentation is still need improvement.",
            "title": "User Class"
        },
        {
            "location": "/privacy-policy/",
            "text": "Privacy Policy\n\n\n\n\nThis privacy policy has been compiled to better serve those who are concerned with how their 'Personally Identifiable Information' (PII) is being used online. PII, as described in US privacy law and information security, is information that can be used on its own or with other information to identify, contact, or locate a single person, or to identify an individual in context. Please read our privacy policy carefully to get a clear understanding of how we collect, use, protect or otherwise handle your Personally Identifiable Information in accordance with our website.\n\n\nWhat personal information do we collect from the people that visit our blog, website or app?\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your name, email address, phone number or other details to help you with your experience.\n\n\nWhen do we collect information?\n\n\nWe collect information from you when you register on our site or enter information on our site.\n\n\nHow do we use your information?\n\n\nWe may use the information we collect from you when you register, make a purchase, sign up for our newsletter, respond to a survey or marketing communication, surf the website, or use certain other site features in the following ways:\n      \u2022 To personalize your experience and to allow us to deliver the type of content and product offerings in which you are most interested.\n\n\nHow do we protect your information?\n\n\n\n\nWe do not use vulnerability scanning and/or scanning to PCI standards.\n\n\nWe only provide articles and information. We never ask for credit card numbers.\n\n\nWe use regular Malware Scanning.\n\n\nYour personal information is contained behind secured networks and is only accessible by a limited number of persons who have special access rights to such systems, and are required to keep the information confidential. In addition, all sensitive/credit information you supply is encrypted via Secure Socket Layer (SSL) technology.\n\n\nWe implement a variety of security measures when a user enters, submits, or accesses their information to maintain the safety of your personal information.\nAll transactions are processed through a gateway provider and are not stored or processed on our servers.\n\n\n\n\nDo we use 'cookies'?\n\n\nYes. Cookies are small files that a site or its service provider transfers to your computer's hard drive through your Web browser (if you allow) that enables the site's or service provider's systems to recognize your browser and capture and remember certain information. For instance, we use cookies to help us remember and process the items in your shopping cart. They are also used to help us understand your preferences based on previous or current site activity, which enables us to provide you with improved services. We also use cookies to help us compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future.\n\n\nWe use cookies to:\n\n\n\n\nHelp remember and process the items in the shopping cart.\n\n\nUnderstand and save user's preferences for future visits.\n\n\nKeep track of advertisements.\n\n\nCompile aggregate data about site traffic and site interactions in order to offer better site experiences and tools in the future. We may also use trusted third-party services that track this information on our behalf.\n\n\n\n\nYou can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies. You do this through your browser settings. Since browser is a little different, look at your browser's Help Menu to learn the correct way to modify your cookies.\n\n\nIf you turn cookies off, some features will be disabled. It won't affect the user's experience that make your site experience more efficient and may not function properly.\n\n\nHowever, you will still be able to place orders .\n\n\nThird-party disclosure\n\n\nWe do not sell, trade, or otherwise transfer to outside parties your Personally Identifiable Information.\n\n\nThird-party links\n\n\nOccasionally, at our discretion, we may include or offer third-party products or services on our website. These third-party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\n\n\nGoogle\n\n\nGoogle's advertising requirements can be summed up by Google's Advertising Principles. They are put in place to provide a positive experience for users. https://support.google.com/adwordspolicy/answer/1316548?hl=en\n\n\nWe use Google AdSense Advertising on our website.\n\n\nGoogle, as a third-party vendor, uses cookies to serve ads on our site. Google's use of the DART cookie enables it to serve ads to our users based on previous visits to our site and other sites on the Internet. Users may opt-out of the use of the DART cookie by visiting the Google Ad and Content Network privacy policy.\n\n\nWe have implemented the following:\n\n\n\n\nRemarketing with Google AdSense\n\n\nDemographics and Interests Reporting\n\n\nDoubleClick Platform Integration\n\n\n\n\nWe, along with third-party vendors such as \nGoogle\n use first-party cookies (such as the \nGoogle Analytics\n cookies) and third-party cookies (such as the \nDoubleClick cookie\n) or other third-party identifiers together to compile data regarding user interactions with ad impressions and other ad service functions as they relate to our website.\n\n\nOpting out:\n\n\nUsers can set preferences for how Google advertises to you using the Google Ad Settings page. Alternatively, you can opt out by visiting the Network Advertising Initiative Opt Out page or by using the Google Analytics Opt Out Browser add on.\n\n\nCalifornia Online Privacy Protection Act\n\n\nCalOPPA is the first state law in the nation to require commercial websites and online services to post a privacy policy. The law's reach stretches well beyond California to require any person or company in the United States (and conceivably the world) that operates websites collecting Personally Identifiable Information from California consumers to post a conspicuous privacy policy on its website stating exactly the information being collected and those individuals or companies with whom it is being shared. - See more at: http://consumercal.org/california-online-privacy-protection-act-caloppa/#sthash.0FdRbT51.dpuf\n\n\nAccording to CalOPPA, we agree to the following:\n\n\nUsers can visit our site anonymously.\nOnce this privacy policy is created, we will add a link to it on our home page or as a minimum, on the first significant page after entering our website.\nOur Privacy Policy link includes the word 'Privacy' and can be easily be found on the page specified above.\n\n\nYou will be notified of any Privacy Policy changes:\n\n\n\n\nOn our Privacy Policy Page\n\n\n\n\nCan change your personal information:\n\n\n\n\nBy logging in to your account\n\n\n\n\nHow does our site handle Do Not Track signals?\n\n\nWe honor Do Not Track signals and Do Not Track, plant cookies, or use advertising when a Do Not Track (DNT) browser mechanism is in place.\n\n\nDoes our site allow third-party behavioral tracking?\n\n\nIt's also important to note that we allow third-party behavioral tracking\n\n\nCOPPA (Children Online Privacy Protection Act)\n\n\nWhen it comes to the collection of personal information from children under the age of 13 years old, the Children's Online Privacy Protection Act (COPPA) puts parents in control. The Federal Trade Commission, United States' consumer protection agency, enforces the COPPA Rule, which spells out what operators of websites and online services must do to protect children's privacy and safety online.\n\n\nWe do not specifically market to children under the age of 13 years old.\n\n\nFair Information Practices\nThe Fair Information Practices Principles form the backbone of privacy law in the United States and the concepts they include have played a significant role in the development of data protection laws around the globe. Understanding the Fair Information Practice Principles and how they should be implemented is critical to comply with the various privacy laws that protect personal information.\n\n\nIn order to be in line with Fair Information Practices we will take the following responsive action, should a data breach occur:\nWe will notify you via email\n\n\n\n\nWithin 7 business days\n\n\n\n\nWe will notify the users via in-site notification\n\n\n\n\nWithin 1 business day\n\n\n\n\nWe also agree to the Individual Redress Principle which requires that individuals have the right to legally pursue enforceable rights against data collectors and processors who fail to adhere to the law. This principle requires not only that individuals have enforceable rights against data users, but also that individuals have recourse to courts or government agencies to investigate and/or prosecute non-compliance by data processors.\n\n\nCAN SPAM Act\n\n\nThe CAN-SPAM Act is a law that sets the rules for commercial email, establishes requirements for commercial messages, gives recipients the right to have emails stopped from being sent to them, and spells out tough penalties for violations.\n\n\nWe collect your email address in order to:\n\n\n\n\nSend information, respond to inquiries, and/or other requests or questions\n\n\nMarket to our mailing list or continue to send emails to our clients after the original transaction has occurred.\n\n\n\n\nTo be in accordance with CANSPAM, we agree to the following:\n\n\n\n\nNot use false or misleading subjects or email addresses.\n\n\nIdentify the message as an advertisement in some reasonable way.\n\n\nInclude the physical address of our business or site headquarters.\n\n\nMonitor third-party email marketing services for compliance, if one is used.\n\n\nHonor opt-out/unsubscribe requests quickly.\n\n\nAllow users to unsubscribe by using the link at the bottom of each email.\n\n\n\n\nIf at any time you would like to unsubscribe from receiving future emails, follow the instructions at the bottom of each email.\nand we will promptly remove you from ALL correspondence.\n\n\nContacting Us\n\n\nIf there are any questions regarding this privacy policy, you may contact us using the information below.\n\n\nGeniXCMS\n- genix.id\n- info@genixcms.com\n\n\n\n\nLast Edited on 2016-08-17",
            "title": "Privacy Policy"
        },
        {
            "location": "/privacy-policy/#privacy-policy",
            "text": "This privacy policy has been compiled to better serve those who are concerned with how their 'Personally Identifiable Information' (PII) is being used online. PII, as described in US privacy law and information security, is information that can be used on its own or with other information to identify, contact, or locate a single person, or to identify an individual in context. Please read our privacy policy carefully to get a clear understanding of how we collect, use, protect or otherwise handle your Personally Identifiable Information in accordance with our website.  What personal information do we collect from the people that visit our blog, website or app?\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your name, email address, phone number or other details to help you with your experience.",
            "title": "Privacy Policy"
        },
        {
            "location": "/privacy-policy/#when-do-we-collect-information",
            "text": "We collect information from you when you register on our site or enter information on our site.",
            "title": "When do we collect information?"
        },
        {
            "location": "/privacy-policy/#how-do-we-use-your-information",
            "text": "We may use the information we collect from you when you register, make a purchase, sign up for our newsletter, respond to a survey or marketing communication, surf the website, or use certain other site features in the following ways:\n      \u2022 To personalize your experience and to allow us to deliver the type of content and product offerings in which you are most interested.",
            "title": "How do we use your information?"
        },
        {
            "location": "/privacy-policy/#how-do-we-protect-your-information",
            "text": "We do not use vulnerability scanning and/or scanning to PCI standards.  We only provide articles and information. We never ask for credit card numbers.  We use regular Malware Scanning.  Your personal information is contained behind secured networks and is only accessible by a limited number of persons who have special access rights to such systems, and are required to keep the information confidential. In addition, all sensitive/credit information you supply is encrypted via Secure Socket Layer (SSL) technology.  We implement a variety of security measures when a user enters, submits, or accesses their information to maintain the safety of your personal information.\nAll transactions are processed through a gateway provider and are not stored or processed on our servers.",
            "title": "How do we protect your information?"
        },
        {
            "location": "/privacy-policy/#do-we-use-cookies",
            "text": "Yes. Cookies are small files that a site or its service provider transfers to your computer's hard drive through your Web browser (if you allow) that enables the site's or service provider's systems to recognize your browser and capture and remember certain information. For instance, we use cookies to help us remember and process the items in your shopping cart. They are also used to help us understand your preferences based on previous or current site activity, which enables us to provide you with improved services. We also use cookies to help us compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future.  We use cookies to:   Help remember and process the items in the shopping cart.  Understand and save user's preferences for future visits.  Keep track of advertisements.  Compile aggregate data about site traffic and site interactions in order to offer better site experiences and tools in the future. We may also use trusted third-party services that track this information on our behalf.   You can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies. You do this through your browser settings. Since browser is a little different, look at your browser's Help Menu to learn the correct way to modify your cookies.  If you turn cookies off, some features will be disabled. It won't affect the user's experience that make your site experience more efficient and may not function properly.  However, you will still be able to place orders .",
            "title": "Do we use 'cookies'?"
        },
        {
            "location": "/privacy-policy/#third-party-disclosure",
            "text": "We do not sell, trade, or otherwise transfer to outside parties your Personally Identifiable Information.",
            "title": "Third-party disclosure"
        },
        {
            "location": "/privacy-policy/#third-party-links",
            "text": "Occasionally, at our discretion, we may include or offer third-party products or services on our website. These third-party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.",
            "title": "Third-party links"
        },
        {
            "location": "/privacy-policy/#google",
            "text": "Google's advertising requirements can be summed up by Google's Advertising Principles. They are put in place to provide a positive experience for users. https://support.google.com/adwordspolicy/answer/1316548?hl=en",
            "title": "Google"
        },
        {
            "location": "/privacy-policy/#we-use-google-adsense-advertising-on-our-website",
            "text": "Google, as a third-party vendor, uses cookies to serve ads on our site. Google's use of the DART cookie enables it to serve ads to our users based on previous visits to our site and other sites on the Internet. Users may opt-out of the use of the DART cookie by visiting the Google Ad and Content Network privacy policy.  We have implemented the following:   Remarketing with Google AdSense  Demographics and Interests Reporting  DoubleClick Platform Integration   We, along with third-party vendors such as  Google  use first-party cookies (such as the  Google Analytics  cookies) and third-party cookies (such as the  DoubleClick cookie ) or other third-party identifiers together to compile data regarding user interactions with ad impressions and other ad service functions as they relate to our website.",
            "title": "We use Google AdSense Advertising on our website."
        },
        {
            "location": "/privacy-policy/#opting-out",
            "text": "Users can set preferences for how Google advertises to you using the Google Ad Settings page. Alternatively, you can opt out by visiting the Network Advertising Initiative Opt Out page or by using the Google Analytics Opt Out Browser add on.",
            "title": "Opting out:"
        },
        {
            "location": "/privacy-policy/#california-online-privacy-protection-act",
            "text": "CalOPPA is the first state law in the nation to require commercial websites and online services to post a privacy policy. The law's reach stretches well beyond California to require any person or company in the United States (and conceivably the world) that operates websites collecting Personally Identifiable Information from California consumers to post a conspicuous privacy policy on its website stating exactly the information being collected and those individuals or companies with whom it is being shared. - See more at: http://consumercal.org/california-online-privacy-protection-act-caloppa/#sthash.0FdRbT51.dpuf",
            "title": "California Online Privacy Protection Act"
        },
        {
            "location": "/privacy-policy/#according-to-caloppa-we-agree-to-the-following",
            "text": "Users can visit our site anonymously.\nOnce this privacy policy is created, we will add a link to it on our home page or as a minimum, on the first significant page after entering our website.\nOur Privacy Policy link includes the word 'Privacy' and can be easily be found on the page specified above.  You will be notified of any Privacy Policy changes:   On our Privacy Policy Page   Can change your personal information:   By logging in to your account",
            "title": "According to CalOPPA, we agree to the following:"
        },
        {
            "location": "/privacy-policy/#how-does-our-site-handle-do-not-track-signals",
            "text": "We honor Do Not Track signals and Do Not Track, plant cookies, or use advertising when a Do Not Track (DNT) browser mechanism is in place.",
            "title": "How does our site handle Do Not Track signals?"
        },
        {
            "location": "/privacy-policy/#does-our-site-allow-third-party-behavioral-tracking",
            "text": "It's also important to note that we allow third-party behavioral tracking",
            "title": "Does our site allow third-party behavioral tracking?"
        },
        {
            "location": "/privacy-policy/#coppa-children-online-privacy-protection-act",
            "text": "When it comes to the collection of personal information from children under the age of 13 years old, the Children's Online Privacy Protection Act (COPPA) puts parents in control. The Federal Trade Commission, United States' consumer protection agency, enforces the COPPA Rule, which spells out what operators of websites and online services must do to protect children's privacy and safety online.",
            "title": "COPPA (Children Online Privacy Protection Act)"
        },
        {
            "location": "/privacy-policy/#we-do-not-specifically-market-to-children-under-the-age-of-13-years-old",
            "text": "Fair Information Practices\nThe Fair Information Practices Principles form the backbone of privacy law in the United States and the concepts they include have played a significant role in the development of data protection laws around the globe. Understanding the Fair Information Practice Principles and how they should be implemented is critical to comply with the various privacy laws that protect personal information.  In order to be in line with Fair Information Practices we will take the following responsive action, should a data breach occur:\nWe will notify you via email   Within 7 business days   We will notify the users via in-site notification   Within 1 business day   We also agree to the Individual Redress Principle which requires that individuals have the right to legally pursue enforceable rights against data collectors and processors who fail to adhere to the law. This principle requires not only that individuals have enforceable rights against data users, but also that individuals have recourse to courts or government agencies to investigate and/or prosecute non-compliance by data processors.",
            "title": "We do not specifically market to children under the age of 13 years old."
        },
        {
            "location": "/privacy-policy/#can-spam-act",
            "text": "The CAN-SPAM Act is a law that sets the rules for commercial email, establishes requirements for commercial messages, gives recipients the right to have emails stopped from being sent to them, and spells out tough penalties for violations.",
            "title": "CAN SPAM Act"
        },
        {
            "location": "/privacy-policy/#we-collect-your-email-address-in-order-to",
            "text": "Send information, respond to inquiries, and/or other requests or questions  Market to our mailing list or continue to send emails to our clients after the original transaction has occurred.",
            "title": "We collect your email address in order to:"
        },
        {
            "location": "/privacy-policy/#to-be-in-accordance-with-canspam-we-agree-to-the-following",
            "text": "Not use false or misleading subjects or email addresses.  Identify the message as an advertisement in some reasonable way.  Include the physical address of our business or site headquarters.  Monitor third-party email marketing services for compliance, if one is used.  Honor opt-out/unsubscribe requests quickly.  Allow users to unsubscribe by using the link at the bottom of each email.   If at any time you would like to unsubscribe from receiving future emails, follow the instructions at the bottom of each email.\nand we will promptly remove you from ALL correspondence.",
            "title": "To be in accordance with CANSPAM, we agree to the following:"
        },
        {
            "location": "/privacy-policy/#contacting-us",
            "text": "If there are any questions regarding this privacy policy, you may contact us using the information below.  GeniXCMS\n- genix.id\n- info@genixcms.com  Last Edited on 2016-08-17",
            "title": "Contacting Us"
        }
    ]
}